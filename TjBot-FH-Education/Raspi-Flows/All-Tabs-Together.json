[
    {
        "id": "650ea4c6.6bf0dc",
        "type": "tab",
        "label": "Startup",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7c482b28.9b8054",
        "type": "tab",
        "label": "Eye",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4921d038.8b51e",
        "type": "tab",
        "label": "Environment",
        "disabled": false,
        "info": ""
    },
    {
        "id": "78ff1e47.3e74c",
        "type": "tab",
        "label": "Motion",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8d3682de.9193d",
        "type": "tab",
        "label": "Joystick",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4eb32f79.2f182",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bc791889.602d28",
        "type": "tab",
        "label": "Motion Training/Testing",
        "disabled": true,
        "info": ""
    },
    {
        "id": "8605b5aa.204638",
        "type": "tab",
        "label": "Motion Training/Testing - All in Cloud",
        "disabled": false,
        "info": ""
    },
    {
        "id": "94c7ddf1.be173",
        "type": "tab",
        "label": "Image",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d1d598b6.2d3c88",
        "type": "tab",
        "label": "Handwriting",
        "disabled": false,
        "info": ""
    },
    {
        "id": "614c76dc.418188",
        "type": "ui_group",
        "z": "",
        "name": "Environment",
        "tab": "7f24773e.89e758",
        "order": 2,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "7f24773e.89e758",
        "type": "ui_tab",
        "z": "",
        "name": "TjBot-OH",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "14b9f630.64d31a",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "787dd67f.06a908",
        "type": "wiotp-credentials",
        "z": "",
        "name": "",
        "org": "bgn6wt",
        "serverName": "",
        "devType": "TjBot",
        "devId": "tjbot-01",
        "keepalive": "60",
        "cleansession": true,
        "tls": "",
        "usetls": false
    },
    {
        "id": "fcfa748.8148188",
        "type": "ui_group",
        "z": "",
        "name": "Send",
        "tab": "7f24773e.89e758",
        "order": 1,
        "disp": false,
        "width": "5",
        "collapse": false
    },
    {
        "id": "919f42db.cb4e2",
        "type": "ui_group",
        "z": "",
        "name": "Motions",
        "tab": "7f24773e.89e758",
        "order": 3,
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "af0023c3.02b21",
        "type": "ui_group",
        "z": "",
        "name": "Joystick",
        "tab": "7f24773e.89e758",
        "disp": true,
        "width": "5",
        "collapse": false
    },
    {
        "id": "70e762f3.1cf1ac",
        "type": "ui_group",
        "z": "",
        "name": "Motion Training",
        "tab": "6180c59e.fc1bac",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6180c59e.fc1bac",
        "type": "ui_tab",
        "z": "",
        "name": "Training Motions",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "7c06e90.5e71a18",
        "type": "wml-config",
        "z": "",
        "host": "https://eu-de.ml.cloud.ibm.com",
        "accesskey": "OooR8uEFdTxN7ecQF6GA8XMFCT-SrytLkjRheDEdz04b",
        "instanceid": "ca8827ac-42b3-4b43-bfdc-7eafb3bf054b",
        "name": "Digit Predict"
    },
    {
        "id": "d7de477f.967218",
        "type": "ui_group",
        "z": "",
        "name": "Motion Training",
        "tab": "26c1cd76.fcd652",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "26c1cd76.fcd652",
        "type": "ui_tab",
        "z": "",
        "name": "Training Motions",
        "icon": "dashboard",
        "order": 3
    },
    {
        "id": "fe5e6e92.e74cb",
        "type": "ui_group",
        "z": "",
        "name": "Commands",
        "tab": "247e3d79.183d62",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "91d76a9f.182008",
        "type": "ui_group",
        "z": "",
        "name": "Local Image",
        "tab": "247e3d79.183d62",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "68f7bdf6.3e3894",
        "type": "ui_group",
        "z": "",
        "name": "Output",
        "tab": "247e3d79.183d62",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "57e29c90.c63524",
        "type": "ui_group",
        "z": "",
        "name": "Camera",
        "tab": "67f040cf.107df",
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "67f040cf.107df",
        "type": "ui_tab",
        "z": "",
        "name": "Camera",
        "icon": "dashboard",
        "order": 6
    },
    {
        "id": "4b68df09.3c13",
        "type": "ui_tab",
        "z": "",
        "name": "Image",
        "icon": "dashboard",
        "order": 4
    },
    {
        "id": "247e3d79.183d62",
        "type": "ui_tab",
        "z": "",
        "name": "Handwriting",
        "icon": "dashboard",
        "order": 5
    },
    {
        "id": "38e29571.c7905a",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "4b68df09.3c13",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2101ca6b.bb6cb6",
        "type": "ui_group",
        "z": "",
        "name": "Local Image",
        "tab": "4b68df09.3c13",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c6016b91.fa58d8",
        "type": "ui_group",
        "z": "",
        "name": "Output",
        "tab": "4b68df09.3c13",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e1141f58.5bdd4",
        "type": "comment",
        "z": "650ea4c6.6bf0dc",
        "name": "Inital Config of TJBot",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "8b891fb9.a2d3d",
        "type": "inject",
        "z": "650ea4c6.6bf0dc",
        "name": "Startup",
        "topic": "",
        "payload": "Startup",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "x": 104,
        "y": 156,
        "wires": [
            [
                "c7d83bc6.261978",
                "ba5fa57b.ad1ec8",
                "ced68678.708548"
            ]
        ]
    },
    {
        "id": "c7d83bc6.261978",
        "type": "exec",
        "z": "650ea4c6.6bf0dc",
        "command": "ifconfig eth0",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "eth0",
        "x": 310,
        "y": 92,
        "wires": [
            [
                "db99fefa.95ec2"
            ],
            [],
            []
        ]
    },
    {
        "id": "db99fefa.95ec2",
        "type": "function",
        "z": "650ea4c6.6bf0dc",
        "name": "Extract eth0",
        "func": "// Initialize variables\nvar tokens, inet, bcast, mask;\nvar eth0 =   {\n    \"ip\" : null, \n    \"bcast\" : null, \n    \"mask\" : null\n}\n\n// Parse the entire string by spaces, and put each item into an array called tokens\ntokens = msg.payload.split(\"\\n\", 4);\nmsg.tokens = tokens;\n\n// check if IP exists\nif (tokens[1].indexOf('inet') == -1) {\n    msg.eth0 = eth0;\n    return msg;\n}\n\n// split possible ip\ntokens[1] = tokens[1].substr(tokens[1].indexOf('inet'));\ninet = tokens[1].split(\" \");\n\neth0.ip = inet[1];\neth0.bcast = inet[7];\neth0.mask = inet[4];\n\n// Don't send a message if the IF is the known default. Change to default ip.\nif (eth0.ip==\"192.168.0.120\") { \n    //outString = \"\"; // set output to null if ip is the same so no message is sent\n    msg.payload = \"NoIp\";\n} else {\n    // return the final output\n    msg.payload = eth0.ip;\n}\n\nmsg.eth0 = eth0;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 491.00002670288086,
        "y": 80.00000238418579,
        "wires": [
            [
                "2a79da68.945df6"
            ]
        ]
    },
    {
        "id": "d42ae381.6fb2f",
        "type": "rpi-sensehat out",
        "z": "650ea4c6.6bf0dc",
        "name": "",
        "x": 782,
        "y": 361.5,
        "wires": []
    },
    {
        "id": "ba5fa57b.ad1ec8",
        "type": "exec",
        "z": "650ea4c6.6bf0dc",
        "command": "hostname",
        "addpay": false,
        "append": "",
        "useSpawn": "",
        "timer": "",
        "name": "hostname",
        "x": 320.0000190734863,
        "y": 155.00001525878906,
        "wires": [
            [
                "b07d6588.5853c8"
            ],
            [],
            []
        ]
    },
    {
        "id": "b07d6588.5853c8",
        "type": "function",
        "z": "650ea4c6.6bf0dc",
        "name": "Get Hostname",
        "func": "msg.payload = msg.payload.slice(0,msg.payload.length-1);\n\nglobal.set(\"device\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 504,
        "y": 136,
        "wires": [
            [
                "2b1578a1.838ee8"
            ]
        ]
    },
    {
        "id": "27a302b.2b7c8fe",
        "type": "change",
        "z": "650ea4c6.6bf0dc",
        "name": "Loop Init",
        "rules": [
            {
                "t": "set",
                "p": "loop",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 154,
        "y": 418,
        "wires": [
            [
                "6e6d21cc.078b1"
            ]
        ]
    },
    {
        "id": "6e6d21cc.078b1",
        "type": "switch",
        "z": "650ea4c6.6bf0dc",
        "name": "",
        "property": "loop",
        "propertyType": "flow",
        "rules": [
            {
                "t": "lt",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 325,
        "y": 418,
        "wires": [
            [
                "f68ab89b.bbcef8"
            ],
            []
        ]
    },
    {
        "id": "a2908b6d.f271a8",
        "type": "function",
        "z": "650ea4c6.6bf0dc",
        "name": "Increase",
        "func": "var count = flow.get('loop') || 0;\ncount += 1;\nflow.set('loop', count);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 388,
        "y": 361,
        "wires": [
            [
                "6e6d21cc.078b1",
                "cde71acf.1fdc48"
            ]
        ]
    },
    {
        "id": "fc4afb6e.aa10d8",
        "type": "link out",
        "z": "650ea4c6.6bf0dc",
        "name": "Show IP",
        "links": [
            "bfb82d3b.abd8e"
        ],
        "x": 1142.0001945495605,
        "y": 67.00000953674316,
        "wires": []
    },
    {
        "id": "bfb82d3b.abd8e",
        "type": "link in",
        "z": "650ea4c6.6bf0dc",
        "name": "",
        "links": [
            "fc4afb6e.aa10d8"
        ],
        "x": 36,
        "y": 418,
        "wires": [
            [
                "27a302b.2b7c8fe"
            ]
        ]
    },
    {
        "id": "f68ab89b.bbcef8",
        "type": "delay",
        "z": "650ea4c6.6bf0dc",
        "name": "Wait",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 474,
        "y": 418,
        "wires": [
            [
                "a2908b6d.f271a8"
            ]
        ]
    },
    {
        "id": "cde71acf.1fdc48",
        "type": "function",
        "z": "650ea4c6.6bf0dc",
        "name": "HAT Msg",
        "func": "var hostname = global.get(\"device\") || \"\";\nvar ip = global.get(\"IP\");\nvar rotation = global.get(\"rotation\");\n\nif (rotation) {\n    msg.payload = rotation + \"\\n\" + hostname + \" : \" + ip.ip;\n} else {\n    msg.payload = hostname + \" : \" + ip.ip;\n}\nmsg.speed = 4;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 588,
        "y": 361,
        "wires": [
            [
                "d42ae381.6fb2f",
                "f60e9d8.326146"
            ]
        ]
    },
    {
        "id": "2b1578a1.838ee8",
        "type": "debug",
        "z": "650ea4c6.6bf0dc",
        "name": "Hostsname",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 694,
        "y": 136,
        "wires": []
    },
    {
        "id": "6fa6ef9e.d9461",
        "type": "comment",
        "z": "650ea4c6.6bf0dc",
        "name": "Show local IP - 3 Times",
        "info": "",
        "x": 120,
        "y": 326,
        "wires": []
    },
    {
        "id": "9414bd24.bfd72",
        "type": "function",
        "z": "650ea4c6.6bf0dc",
        "name": "Set IP Global",
        "func": "var ip = \"NO-IP\";\nif (msg.eth0.ip.length > 0) {\n    global.set(\"IP\", msg.eth0);\n    ip = msg.eth0.ip;\n} else {\n    if (msg.wlan0.ip.length > 0) {\n        global.set(\"IP\", msg.wlan0);\n        ip = msg.wlan0.ip;\n    }\n}\nvar url = \"http://\" + ip + \":1880\";\n\n// Set the Application URL (local)\nglobal.set(\"appurl\", url);\n\n// Set the IP-Address used by TJBot\nglobal.set(\"ipaddr\", ip);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1025.0000762939453,
        "y": 67.0000057220459,
        "wires": [
            [
                "fc4afb6e.aa10d8"
            ]
        ]
    },
    {
        "id": "f60e9d8.326146",
        "type": "debug",
        "z": "650ea4c6.6bf0dc",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 782,
        "y": 420,
        "wires": []
    },
    {
        "id": "2a79da68.945df6",
        "type": "exec",
        "z": "650ea4c6.6bf0dc",
        "command": "ifconfig wlan0",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "wlan0",
        "x": 653.0000076293945,
        "y": 80.00000190734863,
        "wires": [
            [
                "4f9acc76.2b8254"
            ],
            [],
            []
        ]
    },
    {
        "id": "4f9acc76.2b8254",
        "type": "function",
        "z": "650ea4c6.6bf0dc",
        "name": "Extract wlan0",
        "func": "// Initialize variables\nvar tokens, inet, bcast, mask;\nvar wlan0 = {\n    \"ip\" : null,\n    \"bcast\" : null, \n    \"mask\" : null\n}\n\n// Parse the entire string by spaces, and put each item into an array called tokens\ntokens = msg.payload.split(\"\\n\", 4);\nmsg.tokens = tokens;\n\n// check if IP exists\nif (tokens[1].indexOf('inet') == -1) {\n    msg.wlan0 = wlan0;\n    return msg;\n}\n\n// split possible ip\ntokens[1] = tokens[1].substr(tokens[1].indexOf('inet'));\ninet = tokens[1].split(\" \");\n\nwlan0.ip = inet[1];\nwlan0.bcast = inet[7];\nwlan0.mask = inet[4];\n\n// Don't send a message if the IF is the known default. Change to default ip.\nif (wlan0.ip==\"192.168.0.120\") { \n    //outString = \"\"; // set output to null if ip is the same so no message is sent\n    msg.payload = \"NoIp\";\n} else {\n    // return the final output\n    msg.payload = wlan0.ip;\n}\n\nmsg.wlan0 = wlan0;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 840.0000610351562,
        "y": 67.00000190734863,
        "wires": [
            [
                "9414bd24.bfd72",
                "d1dba884.ba4b68"
            ]
        ]
    },
    {
        "id": "ced68678.708548",
        "type": "function",
        "z": "650ea4c6.6bf0dc",
        "name": "Set Globals",
        "func": "// Shloud data sent to IoTF\nglobal.set(\"sendIoTF\", true);\n\n// Is TJBot male ore female\nglobal.set(\"gender\", \"male\");\n\n// What is the default location \nglobal.set(\"location\", \"Linz\");\n\n// Set the necessary rotation for the 8x8 matrix\nglobal.set(\"rotation\",\"R270\");\n\n// Eye Settings \nglobal.set(\"eyeDelay\", 100);\nglobal.set(\"eyeShow\", false);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 333.01739501953125,
        "y": 214.01042556762695,
        "wires": [
            [
                "e35eb6c3.fabdc8"
            ]
        ]
    },
    {
        "id": "e35eb6c3.fabdc8",
        "type": "function",
        "z": "650ea4c6.6bf0dc",
        "name": "Def. SenseHAT",
        "func": "var senseHATImages = [];\nvar rotation = global.get(\"rotation\");\n\nvar sHImage = {\n    \"name\" : \"weather\",\n    \"image\" : [ \n        \"y\",\"y\",\"y\",\"e\",\"e\",\"e\",\"e\",\"e\",\n        \"y\",\"y\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n        \"y\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n        \"e\",\"e\",\"w\",\"w\",\"e\",\"e\",\"e\",\"e\",\n        \"e\",\"w\",\"e\",\"e\",\"w\",\"e\",\"e\",\"e\",\n        \"w\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n        \"e\",\"w\",\"e\",\"e\",\"w\",\"e\",\"e\",\"e\",\n        \"e\",\"e\",\"w\",\"w\",\"e\",\"e\",\"e\",\"e\"\n        ],\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\nvar sHImage = {\n    \"name\" : \"no_light\",\n    \"image\" : [ \n        \"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n        \"e\",\"e\",\"e\",\"x\",\"x\",\"e\",\"e\",\"e\",\n        \"e\",\"e\",\"x\",\"e\",\"e\",\"x\",\"e\",\"e\",\n        \"e\",\"x\",\"e\",\"e\",\"e\",\"e\",\"x\",\"e\",\n        \"e\",\"x\",\"e\",\"e\",\"e\",\"e\",\"x\",\"e\",\n        \"e\",\"e\",\"x\",\"e\",\"e\",\"x\",\"e\",\"e\",\n        \"e\",\"e\",\"e\",\"x\",\"x\",\"e\",\"e\",\"e\",\n        \"e\",\"e\",\"e\",\"x\",\"x\",\"e\",\"e\",\"e\"\n        ],\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\nvar xx_light = [ \n\"?\",\"e\",\"e\",\"?\",\"?\",\"e\",\"e\",\"?\",\n\"e\",\"?\",\"e\",\"x\",\"x\",\"e\",\"?\",\"e\",\n\"e\",\"e\",\"x\",\"e\",\"e\",\"x\",\"e\",\"e\",\n\"?\",\"x\",\"e\",\"e\",\"e\",\"e\",\"x\",\"?\",\n\"e\",\"x\",\"e\",\"e\",\"e\",\"e\",\"x\",\"e\",\n\"e\",\"?\",\"x\",\"e\",\"e\",\"x\",\"?\",\"e\",\n\"?\",\"e\",\"e\",\"x\",\"x\",\"e\",\"e\",\"?\",\n\"e\",\"e\",\"e\",\"x\",\"x\",\"e\",\"e\",\"e\"\n];\n\n// define the possible lights \nvar red_light = xx_light.slice();\nvar blue_light = xx_light.slice();\nvar yellow_light = xx_light.slice();\nvar white_light = xx_light.slice();\nvar green_light = xx_light.slice();\nfor (var y = 0; y < 8; y++) {\n    for (var x = 0; x < 8; x++) {\n        if (xx_light[y*8+x] == \"?\") {\n            red_light[y*8+x] = \"r\";         \n            blue_light[y*8+x] = \"b\";         \n            green_light[y*8+x] = \"g\";         \n            white_light[y*8+x] = \"w\";         \n            yellow_light[y*8+x] = \"y\";         \n        } else {\n            red_light[y*8+x] = xx_light[y*8+x];         \n            blue_light[y*8+x] = xx_light[y*8+x];         \n            green_light[y*8+x] = xx_light[y*8+x];         \n            white_light[y*8+x] = xx_light[y*8+x];         \n            yellow_light[y*8+x] = xx_light[y*8+x];         \n        }\n    }\n}\n\nsHImage = {\n    \"name\" : \"red_light\",\n    \"image\" :  red_light,\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\nsHImage = {\n    \"name\" : \"green_light\",\n    \"image\" :  green_light,\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\nsHImage = {\n    \"name\" : \"yellow_light\",\n    \"image\" :  yellow_light,\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\nsHImage = {\n    \"name\" : \"blue_light\",\n    \"image\" :  blue_light,\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\nsHImage = {\n    \"name\" : \"white_light\",\n    \"image\" :  white_light,\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\n    \nsHImage = {\n    \"name\" : \"smily\",\n    \"image\" :  [ \n        \"o\",\"o\",\"o\",\"e\",\"e\",\"o\",\"o\",\"o\",\n        \"w\",\"w\",\"w\",\"e\",\"e\",\"w\",\"w\",\"w\",\n        \"w\",\"b\",\"w\",\"e\",\"e\",\"w\",\"b\",\"w\",\n        \"w\",\"w\",\"w\",\"e\",\"e\",\"w\",\"w\",\"w\",\n        \"e\",\"e\",\"e\",\"y\",\"y\",\"e\",\"e\",\"e\",\n        \"r\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"r\",\n        \"e\",\"r\",\"r\",\"r\",\"r\",\"r\",\"r\",\"e\",\n        \"e\",\"e\",\"e\",\"r\",\"r\",\"e\",\"e\",\"e\"\n        ],\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\nsHImage = {\n    \"name\" : \"frusty\",\n    \"image\" :  [ \n        \"o\",\"o\",\"o\",\"e\",\"e\",\"o\",\"o\",\"o\",\n        \"w\",\"w\",\"w\",\"e\",\"e\",\"w\",\"w\",\"w\",\n        \"w\",\"b\",\"w\",\"e\",\"e\",\"w\",\"b\",\"w\",\n        \"w\",\"w\",\"w\",\"e\",\"e\",\"w\",\"w\",\"w\",\n        \"e\",\"e\",\"e\",\"y\",\"y\",\"e\",\"e\",\"e\",\n        \"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n        \"e\",\"r\",\"r\",\"r\",\"r\",\"r\",\"r\",\"e\",\n        \"r\",\"r\",\"e\",\"e\",\"e\",\"e\",\"r\",\"r\"\n        ],\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\nsHImage = {\n    \"name\" : \"surprised\",\n    \"image\" :  [ \n        \"o\",\"o\",\"o\",\"e\",\"e\",\"o\",\"o\",\"o\",\n        \"w\",\"w\",\"w\",\"e\",\"e\",\"w\",\"w\",\"w\",\n        \"w\",\"b\",\"w\",\"e\",\"e\",\"w\",\"b\",\"w\",\n        \"w\",\"w\",\"w\",\"e\",\"e\",\"w\",\"w\",\"w\",\n        \"e\",\"e\",\"e\",\"y\",\"y\",\"e\",\"e\",\"e\",\n        \"e\",\"e\",\"r\",\"r\",\"r\",\"r\",\"e\",\"e\",\n        \"e\",\"e\",\"r\",\"e\",\"e\",\"r\",\"e\",\"e\",\n        \"e\",\"e\",\"r\",\"r\",\"r\",\"r\",\"e\",\"e\"\n        ],\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\nsHImage = {\n    \"name\" : \"nutreal\",\n    \"image\" :  [ \n        \"o\",\"o\",\"o\",\"e\",\"e\",\"o\",\"o\",\"o\",\n        \"w\",\"w\",\"w\",\"e\",\"e\",\"w\",\"w\",\"w\",\n        \"w\",\"b\",\"w\",\"e\",\"e\",\"w\",\"b\",\"w\",\n        \"w\",\"w\",\"w\",\"e\",\"e\",\"w\",\"w\",\"w\",\n        \"e\",\"e\",\"e\",\"y\",\"y\",\"e\",\"e\",\"e\",\n        \"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n        \"e\",\"r\",\"r\",\"r\",\"r\",\"r\",\"r\",\"e\",\n        \"e\",\"e\",\"r\",\"r\",\"r\",\"r\",\"e\",\"e\"\n        ],\n    \"sImage\": \"\"\n}\nsenseHATImages.push(sHImage);\n\n// convert all the images to a SenseHAT string\nfor (var i = 0; i < senseHATImages.length; i++) {\n    var sImage = \"\";\n    var first = true;\n    for (var y = 0; y < 8; y++) {\n        for (var x = 0; x < 8; x++) {\n            if (first === true) {\n                sImage = \"\";\n                if (rotation) {\n                    sImage = rotation + \"\\n\";\n                }\n                sImage = sImage + x + \",\" + y;\n                first = false;\n            } else {\n                sImage = sImage + \",\" + x + \",\" + y;\n            }\n            switch (senseHATImages[i].image[y*8+x]) {\n                case \"r\":\n                    sImage = sImage + \",red\";\n                    break;\n                case \"g\":\n                    sImage = sImage + \",green\";\n                    break;\n                case \"b\":\n                    sImage = sImage + \",blue\";\n                    break;\n                case \"y\":\n                    sImage = sImage + \",yellow\";\n                    break;\n                case \"p\":\n                    sImage = sImage + \",purple\";\n                    break;\n                case \"m\":\n                    sImage = sImage + \",magenta\";\n                    break;\n                case \"l\":\n                    sImage = sImage + \",oldlace\";\n                    break;\n                case \"o\":\n                    //sImage = sImage + \",210,105,30\";\n                    sImage = sImage + \",orange\";\n                    break;\n                case \"i\":\n                    sImage = sImage + \",pink\";\n                    break;\n                case \"x\":\n                    sImage = sImage + \",192,192,192\";\n                    break;\n                case \"w\":\n                    sImage = sImage + \",white\";\n                    break;\n                default:\n                    sImage = sImage + \",off\";\n                    break;\n            }    \n        }\n    }\n    senseHATImages[i].sImage = sImage;\n}\n\n// save Images to global\nglobal.set(\"senseHATImages\", senseHATImages);\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 518.017391204834,
        "y": 214.0104274749756,
        "wires": [
            []
        ]
    },
    {
        "id": "d1dba884.ba4b68",
        "type": "debug",
        "z": "650ea4c6.6bf0dc",
        "name": "IP-Adresse",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1034,
        "y": 16,
        "wires": []
    },
    {
        "id": "aec60fd6.74c93",
        "type": "comment",
        "z": "4921d038.8b51e",
        "name": "Environment",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "baaba694.39ddb8",
        "type": "rpi-sensehat in",
        "z": "4921d038.8b51e",
        "name": "Environment",
        "motion": false,
        "env": true,
        "stick": false,
        "x": 110,
        "y": 320,
        "wires": [
            [
                "f1297e5e.43079",
                "ebbfbce2.7dde3",
                "2adf9f88.7bfd6",
                "bb14b66f.b6abc8",
                "d493b45e.e6b028",
                "7bcc6533.ee2e0c"
            ]
        ]
    },
    {
        "id": "b150d2ae.689cd",
        "type": "ui_gauge",
        "z": "4921d038.8b51e",
        "name": "",
        "group": "614c76dc.418188",
        "order": 0,
        "width": "5",
        "height": "5",
        "gtype": "gage",
        "title": "Temperature",
        "label": "Temp",
        "format": "{{value}}",
        "min": "-40",
        "max": "+50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 540,
        "y": 280,
        "wires": []
    },
    {
        "id": "f1297e5e.43079",
        "type": "change",
        "z": "4921d038.8b51e",
        "name": "set temp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 280,
        "wires": [
            [
                "b150d2ae.689cd",
                "1884b81d.e71028"
            ]
        ]
    },
    {
        "id": "ebbfbce2.7dde3",
        "type": "change",
        "z": "4921d038.8b51e",
        "name": "set hum",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.humidity",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 320,
        "wires": [
            [
                "4826a3b1.48674c"
            ]
        ]
    },
    {
        "id": "2adf9f88.7bfd6",
        "type": "change",
        "z": "4921d038.8b51e",
        "name": "set pressure",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.pressure",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "bfb8a638.6fe918"
            ]
        ]
    },
    {
        "id": "4826a3b1.48674c",
        "type": "ui_gauge",
        "z": "4921d038.8b51e",
        "name": "",
        "group": "614c76dc.418188",
        "order": 0,
        "width": "5",
        "height": "5",
        "gtype": "gage",
        "title": "Humidity",
        "label": "Hum",
        "format": "{{value}}",
        "min": "0",
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 530,
        "y": 320,
        "wires": []
    },
    {
        "id": "bfb8a638.6fe918",
        "type": "ui_gauge",
        "z": "4921d038.8b51e",
        "name": "",
        "group": "614c76dc.418188",
        "order": 0,
        "width": "5",
        "height": "5",
        "gtype": "gage",
        "title": "Pressure",
        "label": "Pressure",
        "format": "{{value}}",
        "min": "0",
        "max": "1500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 530,
        "y": 360,
        "wires": []
    },
    {
        "id": "1884b81d.e71028",
        "type": "ui_chart",
        "z": "4921d038.8b51e",
        "name": "",
        "group": "614c76dc.418188",
        "order": 0,
        "width": "5",
        "height": "5",
        "label": "Temp",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 520,
        "y": 240,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bb14b66f.b6abc8",
        "type": "function",
        "z": "4921d038.8b51e",
        "name": "Set IoT Data",
        "func": "// enhance payload with a timestamp & devicename\nvar dat = new Date();\nmsg.payload.timestamp = Math.floor(dat);\nmsg.payload.date = dat.toJSON();\nmsg.payload.device = \"tjbot-01\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 440,
        "wires": [
            [
                "644b2151.736bd"
            ]
        ]
    },
    {
        "id": "5095156a.05066c",
        "type": "debug",
        "z": "4921d038.8b51e",
        "name": "IoT Sent Env",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 710,
        "y": 400,
        "wires": []
    },
    {
        "id": "1fc134d4.4b2bbb",
        "type": "wiotp out",
        "z": "4921d038.8b51e",
        "authType": "d",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "787dd67f.06a908",
        "deviceType": "",
        "deviceId": "",
        "event": "environment",
        "format": "json",
        "qos": "",
        "name": "Sent2IoTF",
        "x": 710,
        "y": 440,
        "wires": []
    },
    {
        "id": "d20a0a78.99c978",
        "type": "inject",
        "z": "4921d038.8b51e",
        "name": "Send On",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 80,
        "wires": [
            [
                "2af463ec.c958ec"
            ]
        ]
    },
    {
        "id": "af82d1ed.5e09e",
        "type": "change",
        "z": "4921d038.8b51e",
        "name": "Environment",
        "rules": [
            {
                "t": "set",
                "p": "environment",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "aff9716d.e7a38",
        "type": "inject",
        "z": "4921d038.8b51e",
        "name": "Send Off",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "2af463ec.c958ec"
            ]
        ]
    },
    {
        "id": "644b2151.736bd",
        "type": "switch",
        "z": "4921d038.8b51e",
        "name": "Send ?",
        "property": "environment",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 440,
        "wires": [
            [
                "1fc134d4.4b2bbb",
                "5095156a.05066c"
            ]
        ]
    },
    {
        "id": "2af463ec.c958ec",
        "type": "ui_switch",
        "z": "4921d038.8b51e",
        "name": "",
        "label": "Send Environment",
        "group": "fcfa748.8148188",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "af82d1ed.5e09e"
            ]
        ]
    },
    {
        "id": "261de35f.4f3ddc",
        "type": "comment",
        "z": "78ff1e47.3e74c",
        "name": "Motions",
        "info": "",
        "x": 70,
        "y": 40,
        "wires": []
    },
    {
        "id": "ad0fd169.995ac",
        "type": "rpi-sensehat in",
        "z": "78ff1e47.3e74c",
        "name": "Motions",
        "motion": true,
        "env": false,
        "stick": false,
        "x": 90,
        "y": 420,
        "wires": [
            [
                "e608e191.60a3b",
                "eeedfc14.212a5",
                "ed8eddc8.851da",
                "ac9053f.b3e96b",
                "a2648d89.9ec5b",
                "4cc6a850.8ff3a8"
            ]
        ]
    },
    {
        "id": "e608e191.60a3b",
        "type": "change",
        "z": "78ff1e47.3e74c",
        "name": "set acceleration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.acceleration",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "3c4e2024.d3562"
            ]
        ]
    },
    {
        "id": "eeedfc14.212a5",
        "type": "change",
        "z": "78ff1e47.3e74c",
        "name": "set gyroscope",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.gyroscope",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 420,
        "wires": [
            [
                "e05f081e.ae7228"
            ]
        ]
    },
    {
        "id": "ed8eddc8.851da",
        "type": "change",
        "z": "78ff1e47.3e74c",
        "name": "set orientation",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.orientation",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 460,
        "wires": [
            [
                "3329d4f3.98395c"
            ]
        ]
    },
    {
        "id": "ac9053f.b3e96b",
        "type": "function",
        "z": "78ff1e47.3e74c",
        "name": "Set IoT Data",
        "func": "// enhance payload with a timestamp & devicename\nvar dat = new Date();\nmsg.payload.timestamp = Math.floor(dat);\nmsg.payload.date = dat.toJSON();\nmsg.payload.device = \"tjbot-01\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 580,
        "wires": [
            [
                "32b189f0.307466"
            ]
        ]
    },
    {
        "id": "2be2003b.09f5a",
        "type": "debug",
        "z": "78ff1e47.3e74c",
        "name": "IoT Sent Motions",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 730,
        "y": 560,
        "wires": []
    },
    {
        "id": "44007fac.d0456",
        "type": "wiotp out",
        "z": "78ff1e47.3e74c",
        "authType": "d",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "787dd67f.06a908",
        "deviceType": "",
        "deviceId": "",
        "event": "motions",
        "format": "json",
        "qos": "",
        "name": "Sent2IoTF",
        "x": 710,
        "y": 600,
        "wires": []
    },
    {
        "id": "409e2c8f.930384",
        "type": "inject",
        "z": "78ff1e47.3e74c",
        "name": "Send On",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 80,
        "wires": [
            [
                "fbe99c14.df726"
            ]
        ]
    },
    {
        "id": "914bdbd2.32e198",
        "type": "change",
        "z": "78ff1e47.3e74c",
        "name": "Motions",
        "rules": [
            {
                "t": "set",
                "p": "motions",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c7175cd5.93cc8",
        "type": "inject",
        "z": "78ff1e47.3e74c",
        "name": "Send Off",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "fbe99c14.df726"
            ]
        ]
    },
    {
        "id": "32b189f0.307466",
        "type": "switch",
        "z": "78ff1e47.3e74c",
        "name": "Send ?",
        "property": "motions",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "44007fac.d0456",
                "2be2003b.09f5a"
            ]
        ]
    },
    {
        "id": "fbe99c14.df726",
        "type": "ui_switch",
        "z": "78ff1e47.3e74c",
        "name": "",
        "label": "Send Motions",
        "group": "fcfa748.8148188",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 320,
        "y": 100,
        "wires": [
            [
                "914bdbd2.32e198"
            ]
        ]
    },
    {
        "id": "a0b3af97.7518c",
        "type": "comment",
        "z": "8d3682de.9193d",
        "name": "Joystick",
        "info": "",
        "x": 70,
        "y": 40,
        "wires": []
    },
    {
        "id": "aeb1edd9.26eb6",
        "type": "rpi-sensehat in",
        "z": "8d3682de.9193d",
        "name": "Joystick",
        "motion": false,
        "env": false,
        "stick": true,
        "x": 90,
        "y": 280,
        "wires": [
            [
                "bef2289c.db2348",
                "5ed27933.b9ad78",
                "77aaa2fc.e54aec",
                "62927635.6ad0e8"
            ]
        ]
    },
    {
        "id": "bef2289c.db2348",
        "type": "change",
        "z": "8d3682de.9193d",
        "name": "set key",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.key",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 240,
        "wires": [
            [
                "ecee0e55.a5385"
            ]
        ]
    },
    {
        "id": "5ed27933.b9ad78",
        "type": "function",
        "z": "8d3682de.9193d",
        "name": "Set IoT Data",
        "func": "// enhance payload with a timestamp & devicename\nvar dat = new Date();\nmsg.payload.timestamp = Math.floor(dat);\nmsg.payload.date = dat.toJSON();\nmsg.payload.device = \"tjbot-01\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 400,
        "wires": [
            [
                "d63ac69b.7a6ab8"
            ]
        ]
    },
    {
        "id": "c46604d8.8606e8",
        "type": "debug",
        "z": "8d3682de.9193d",
        "name": "IoT Sent Joystick",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 730,
        "y": 360,
        "wires": []
    },
    {
        "id": "c1411a33.239f98",
        "type": "wiotp out",
        "z": "8d3682de.9193d",
        "authType": "d",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "787dd67f.06a908",
        "deviceType": "",
        "deviceId": "",
        "event": "joystick",
        "format": "json",
        "qos": "",
        "name": "Sent2IoTF",
        "x": 710,
        "y": 400,
        "wires": []
    },
    {
        "id": "54a05425.a06d9c",
        "type": "inject",
        "z": "8d3682de.9193d",
        "name": "Send On",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 80,
        "wires": [
            [
                "901b09a.7b53bf8"
            ]
        ]
    },
    {
        "id": "f7ff1c90.a7a94",
        "type": "change",
        "z": "8d3682de.9193d",
        "name": "Joystick",
        "rules": [
            {
                "t": "set",
                "p": "joystick",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "9a12b1f4.82bf6",
        "type": "inject",
        "z": "8d3682de.9193d",
        "name": "Send Off",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "901b09a.7b53bf8"
            ]
        ]
    },
    {
        "id": "d63ac69b.7a6ab8",
        "type": "switch",
        "z": "8d3682de.9193d",
        "name": "Send ?",
        "property": "joystick",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "c1411a33.239f98",
                "c46604d8.8606e8"
            ]
        ]
    },
    {
        "id": "901b09a.7b53bf8",
        "type": "ui_switch",
        "z": "8d3682de.9193d",
        "name": "",
        "label": "Send Joystick",
        "group": "fcfa748.8148188",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 320,
        "y": 100,
        "wires": [
            [
                "f7ff1c90.a7a94"
            ]
        ]
    },
    {
        "id": "77aaa2fc.e54aec",
        "type": "change",
        "z": "8d3682de.9193d",
        "name": "set state",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 280,
        "wires": [
            [
                "605e6d42.88aae4"
            ]
        ]
    },
    {
        "id": "62927635.6ad0e8",
        "type": "debug",
        "z": "8d3682de.9193d",
        "name": "Joystick",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 300,
        "y": 200,
        "wires": []
    },
    {
        "id": "a2648d89.9ec5b",
        "type": "change",
        "z": "78ff1e47.3e74c",
        "name": "set compass",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.compass",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 500,
        "wires": [
            [
                "3b85346a.577e0c"
            ]
        ]
    },
    {
        "id": "3c4e2024.d3562",
        "type": "ui_text",
        "z": "78ff1e47.3e74c",
        "group": "919f42db.cb4e2",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "acceleration",
        "label": "acceleration",
        "format": "{{msg.payload.x}} / {{msg.payload.y}} / {{msg.payload.z}}",
        "layout": "col-center",
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "e05f081e.ae7228",
        "type": "ui_text",
        "z": "78ff1e47.3e74c",
        "group": "919f42db.cb4e2",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "gyroscope",
        "label": "gyroscope",
        "format": "{{msg.payload.x}} / {{msg.payload.y}} / {{msg.payload.z}}",
        "layout": "col-center",
        "x": 570,
        "y": 420,
        "wires": []
    },
    {
        "id": "3329d4f3.98395c",
        "type": "ui_text",
        "z": "78ff1e47.3e74c",
        "group": "919f42db.cb4e2",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "orientation",
        "label": "orientation",
        "format": "roll: {{msg.payload.roll}} / pitch: {{msg.payload.pitch}} / yaw: {{msg.payload.yaw}}",
        "layout": "col-center",
        "x": 570,
        "y": 460,
        "wires": []
    },
    {
        "id": "3b85346a.577e0c",
        "type": "ui_text",
        "z": "78ff1e47.3e74c",
        "group": "919f42db.cb4e2",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "compass",
        "label": "compass",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 560,
        "y": 500,
        "wires": []
    },
    {
        "id": "ecee0e55.a5385",
        "type": "ui_text",
        "z": "8d3682de.9193d",
        "group": "af0023c3.02b21",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Key",
        "label": "key",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 490,
        "y": 240,
        "wires": []
    },
    {
        "id": "605e6d42.88aae4",
        "type": "ui_text",
        "z": "8d3682de.9193d",
        "group": "af0023c3.02b21",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "State",
        "label": "state",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 490,
        "y": 280,
        "wires": []
    },
    {
        "id": "d493b45e.e6b028",
        "type": "debug",
        "z": "4921d038.8b51e",
        "name": "Environment",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 330,
        "y": 200,
        "wires": []
    },
    {
        "id": "4cc6a850.8ff3a8",
        "type": "debug",
        "z": "78ff1e47.3e74c",
        "name": "Motions",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 320,
        "y": 320,
        "wires": []
    },
    {
        "id": "22268d5a.d96742",
        "type": "function",
        "z": "7c482b28.9b8054",
        "name": "SenseHAT",
        "func": "// get the Images\nvar senseHATImages = global.get(\"senseHATImages\");\nvar loop = true;\nvar sImage = \"\";\nvar image = [];\n\n// get the right image \nfor (var i = 0; i < senseHATImages.length && loop; i++) {\n    // set the image to be displayed\n    if (senseHATImages[i].name == msg.payload) {\n        loop = false;\n        sImage = senseHATImages[i].sImage;\n        image = senseHATImages[i].image;\n    }\n}\n\nmsg.payload = sImage;\nmsg.image = image;\nmsg.speed = 5;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 740,
        "wires": [
            [
                "876ae8f2.38a2b8",
                "109c3e8b.c58e21"
            ]
        ]
    },
    {
        "id": "27c62519.69e4ca",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "start",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 102,
        "y": 220,
        "wires": [
            [
                "37eae8dc.0b8aa8"
            ]
        ]
    },
    {
        "id": "6aa96713.e12fb8",
        "type": "function",
        "z": "7c482b28.9b8054",
        "name": "Eye",
        "func": "var xPos = flow.get(\"xPos\");\nvar yPos = flow.get(\"yPos\");\n\nvar eyeArr = Array();\nvar ret = Array();\n\nvar off = [ \n\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\n\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\",\"e\"\n];\n\nvar eye = [ \n\"e\",\"e\",\"w\",\"w\",\"w\",\"w\",\"e\",\"e\",\n\"e\",\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\"e\",\n\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\n\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\n\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\n\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\n\"e\",\"w\",\"w\",\"w\",\"w\",\"w\",\"w\",\"e\",\n\"e\",\"e\",\"w\",\"w\",\"w\",\"w\",\"e\",\"e\"\n];\n\n// what to do \nswitch(msg.payload) {\n    case \"up\":\n        if (yPos > 0) {\n            yPos = yPos - 1;\n        }\n        break;\n    case \"down\":\n        if (yPos < 6 ) {\n            yPos = yPos + 1;\n        }\n        break;\n    case \"left\":\n        if (xPos > 0) {\n            xPos = xPos - 1;\n        }\n        break;\n    case \"right\":\n        if (xPos < 6) {\n            xPos = xPos + 1;\n        }\n        break;\n    case \"off\":\n        xPos = 0;\n        yPos = 0;\n        eye = off;\n        global.set(\"eyeShow\", false);\n        break;\n    case \"start\":\n        xPos = 3;\n        yPos = 3;\n        global.set(\"eyeShow\", true);\n        break; \n    case \"wink\":\n        break;\n}\n\nif (msg.payload != \"off\" && !global.get(\"eyeShow\")) {\n    return null;    \n}\n\n// set the eye in the position \neye[yPos*8+xPos] = \"e\";\neye[yPos*8+xPos+1] = \"e\";\neye[(yPos+1)*8+xPos] = \"e\";\neye[(yPos+1)*8+xPos+1] = \"e\";\n\n// store the eye\neyeArr.push(eye);\n\n// if wink -- change eye\nif (msg.payload == \"wink\") {\n    // close eye\n    var cEye = eye.slice();\n    for (var i = 0; i < 4; i++) {\n        for (var x = 0; x < 8; x++) {\n            cEye[i*8+x] = \"o\";\n            cEye[(7-i)*8+x] = \"o\";\n        }\n        eyeArr.push(cEye.slice());\n    }\n    \n    eyeArr.push(eyeArr[4].slice());\n    eyeArr.push(eyeArr[3].slice());\n    eyeArr.push(eyeArr[2].slice());\n    eyeArr.push(eyeArr[1].slice());\n    eyeArr.push(eyeArr[0].slice());\n}\n\n// convert all eyes\nvar delay = 0;\nfor (var a=0; a < eyeArr.length; a++) {\n    \n    // turn into string\n    var sImage = \"\";\n    var first = true;\n    var aEye = eyeArr[a];\n    var rotation = global.get(\"rotation\");\n    \n    for (var y = 0; y < 8; y++) {\n        for (var x = 0; x < 8; x++) {\n            if (first === true) {\n                if (rotation){\n                    sImage = rotation + \"\\n\";\n                }\n                sImage = sImage + x + \",\" + y;\n                first = false;\n            } else {\n                sImage = sImage + \",\" + x + \",\" + y;\n            }\n            switch (aEye[y*8+x]) {\n                case \"r\":\n                    sImage = sImage + \",red\";\n                    break;\n                case \"g\":\n                    sImage = sImage + \",green\";\n                    break;\n                case \"b\":\n                    sImage = sImage + \",blue\";\n                    break;\n                case \"y\":\n                    sImage = sImage + \",yellow\";\n                    break;\n                case \"o\":\n                    sImage = sImage + \",210,105,30\";\n                    break;\n                case \"w\":\n                    sImage = sImage + \",white\";\n                    break;\n                default:\n                    sImage = sImage + \",off\";\n                    break;\n            }    \n        }\n    }\n    ret.push( {payload : sImage, delay: delay});\n    delay = delay + global.get(\"eyeDelay\");\n}\n\nflow.set(\"xPos\", xPos);\nflow.set(\"yPos\", yPos);\n\nreturn [ret];",
        "outputs": 1,
        "noerr": 0,
        "x": 442,
        "y": 80,
        "wires": [
            [
                "da8e711c.91d7b"
            ]
        ]
    },
    {
        "id": "da8e711c.91d7b",
        "type": "delay",
        "z": "7c482b28.9b8054",
        "name": "",
        "pauseType": "delayv",
        "timeout": "300",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 592,
        "y": 80,
        "wires": [
            [
                "8df08aa6.873168",
                "4af9c89f.ed5b18"
            ]
        ]
    },
    {
        "id": "d8f5952c.8ac6d8",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 102,
        "y": 260,
        "wires": [
            [
                "37eae8dc.0b8aa8"
            ]
        ]
    },
    {
        "id": "b1685a8f.ff1e08",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "up",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 102,
        "y": 320,
        "wires": [
            [
                "37eae8dc.0b8aa8"
            ]
        ]
    },
    {
        "id": "8b9a5ba6.71efd8",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "down",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 102,
        "y": 360,
        "wires": [
            [
                "37eae8dc.0b8aa8"
            ]
        ]
    },
    {
        "id": "d09e1612.772658",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "left",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 102,
        "y": 400,
        "wires": [
            [
                "37eae8dc.0b8aa8"
            ]
        ]
    },
    {
        "id": "41bb4c02.61d124",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "right",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 102,
        "y": 440,
        "wires": [
            [
                "37eae8dc.0b8aa8"
            ]
        ]
    },
    {
        "id": "de501b1b.98c7f8",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "wink",
        "payloadType": "str",
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 102,
        "y": 480,
        "wires": [
            [
                "37eae8dc.0b8aa8"
            ]
        ]
    },
    {
        "id": "8df08aa6.873168",
        "type": "rpi-sensehat out",
        "z": "7c482b28.9b8054",
        "name": "",
        "x": 782,
        "y": 80,
        "wires": []
    },
    {
        "id": "4af9c89f.ed5b18",
        "type": "debug",
        "z": "7c482b28.9b8054",
        "name": "eye",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 762,
        "y": 20,
        "wires": []
    },
    {
        "id": "1b5aa748.4d2ec9",
        "type": "comment",
        "z": "7c482b28.9b8054",
        "name": "Eye Emulation and endpoint",
        "info": "",
        "x": 132,
        "y": 20,
        "wires": []
    },
    {
        "id": "9c85070.fc4a8f8",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "surprised",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 112,
        "y": 620,
        "wires": [
            [
                "22268d5a.d96742"
            ]
        ]
    },
    {
        "id": "876ae8f2.38a2b8",
        "type": "rpi-sensehat out",
        "z": "7c482b28.9b8054",
        "name": "",
        "x": 552,
        "y": 740,
        "wires": []
    },
    {
        "id": "93f9bbef.3f6d08",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "smily",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 102,
        "y": 659,
        "wires": [
            [
                "22268d5a.d96742"
            ]
        ]
    },
    {
        "id": "91db22fa.c86c4",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "frusty",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 102,
        "y": 699,
        "wires": [
            [
                "22268d5a.d96742"
            ]
        ]
    },
    {
        "id": "fd9931fc.fdc07",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "",
        "topic": "",
        "payload": "nutreal",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 102,
        "y": 739,
        "wires": [
            [
                "22268d5a.d96742"
            ]
        ]
    },
    {
        "id": "6cc75bff.fa62f4",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "no light",
        "topic": "",
        "payload": "no_light",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 102,
        "y": 780,
        "wires": [
            [
                "22268d5a.d96742"
            ]
        ]
    },
    {
        "id": "3f87079a.098608",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "red light",
        "topic": "",
        "payload": "red_light",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 102,
        "y": 820,
        "wires": [
            [
                "22268d5a.d96742"
            ]
        ]
    },
    {
        "id": "8cbeb78f.432128",
        "type": "inject",
        "z": "7c482b28.9b8054",
        "name": "Blue light",
        "topic": "",
        "payload": "blue_light",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 111,
        "y": 861,
        "wires": [
            [
                "22268d5a.d96742"
            ]
        ]
    },
    {
        "id": "da511f2c.d3461",
        "type": "comment",
        "z": "7c482b28.9b8054",
        "name": "SenseHAT Faces",
        "info": "",
        "x": 92,
        "y": 580,
        "wires": []
    },
    {
        "id": "109c3e8b.c58e21",
        "type": "debug",
        "z": "7c482b28.9b8054",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 572,
        "y": 680,
        "wires": []
    },
    {
        "id": "e990425f.3a968",
        "type": "http request",
        "z": "7c482b28.9b8054",
        "name": "Control Eye",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 522,
        "y": 360,
        "wires": [
            [
                "97c76178.f47b8"
            ]
        ]
    },
    {
        "id": "97c76178.f47b8",
        "type": "debug",
        "z": "7c482b28.9b8054",
        "name": "Eye Control",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 702,
        "y": 360,
        "wires": []
    },
    {
        "id": "850c4ca4.ba2fb",
        "type": "http in",
        "z": "7c482b28.9b8054",
        "name": "",
        "url": "/eye",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 92,
        "y": 140,
        "wires": [
            [
                "8ab266ea.6e0078",
                "1ff63998.10a406"
            ]
        ]
    },
    {
        "id": "8ab266ea.6e0078",
        "type": "template",
        "z": "7c482b28.9b8054",
        "name": "page",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{ \"Eye\":  {{req.query.eye}} }",
        "x": 262,
        "y": 140,
        "wires": [
            [
                "f3ae10e3.5ae5"
            ]
        ]
    },
    {
        "id": "f3ae10e3.5ae5",
        "type": "change",
        "z": "7c482b28.9b8054",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 422,
        "y": 140,
        "wires": [
            [
                "de7ee83b.626c28"
            ]
        ]
    },
    {
        "id": "de7ee83b.626c28",
        "type": "http response",
        "z": "7c482b28.9b8054",
        "name": "",
        "x": 582,
        "y": 140,
        "wires": []
    },
    {
        "id": "37eae8dc.0b8aa8",
        "type": "function",
        "z": "7c482b28.9b8054",
        "name": "set eye URL",
        "func": "msg.url = global.get(\"appurl\") + \"/\" + \"eye?eye=\" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 342,
        "y": 360,
        "wires": [
            [
                "e990425f.3a968"
            ]
        ]
    },
    {
        "id": "1ff63998.10a406",
        "type": "change",
        "z": "7c482b28.9b8054",
        "name": "eye control",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.eye",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 282,
        "y": 80,
        "wires": [
            [
                "6aa96713.e12fb8"
            ]
        ]
    },
    {
        "id": "7bcc6533.ee2e0c",
        "type": "function",
        "z": "4921d038.8b51e",
        "name": "Virtueller Taupunkt Sensor",
        "func": "var Td = msg.payload.temperature * 0.95267614 + \n    msg.payload.pressure*0.00237828 + \n    msg.payload.humidity * 0.2338594 - 24.281223677043389;\n    \nmsg.payload = Td;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 520,
        "wires": [
            [
                "b7227d44.8cc52"
            ]
        ]
    },
    {
        "id": "b7227d44.8cc52",
        "type": "ui_gauge",
        "z": "4921d038.8b51e",
        "name": "",
        "group": "614c76dc.418188",
        "order": 0,
        "width": "5",
        "height": "5",
        "gtype": "wave",
        "title": "Taupunkt",
        "label": "°",
        "format": "{{value}}",
        "min": "-50",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 600,
        "y": 520,
        "wires": []
    },
    {
        "id": "7588cb95.0d56b4",
        "type": "ui_text",
        "z": "bc791889.602d28",
        "group": "70e762f3.1cf1ac",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Recoded events:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 210,
        "y": 580,
        "wires": []
    },
    {
        "id": "2e65f875.ad92c8",
        "type": "comment",
        "z": "bc791889.602d28",
        "name": "Motion Training - Demo Flow",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "a81fb5e8.3d3838",
        "type": "rpi-sensehat in",
        "z": "bc791889.602d28",
        "name": "Motions",
        "motion": true,
        "env": false,
        "stick": false,
        "x": 110,
        "y": 820,
        "wires": [
            [
                "52bb6c35.659714"
            ]
        ]
    },
    {
        "id": "d33c0eaa.b8c44",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "Store Motions",
        "func": "// Get Motion Array\nvar motions = flow.get('motions') || [];\nvar acceleration = flow.get('acceleration') || [];\nvar qyroscope = flow.get('qyroscope') || [];\nvar orientation = flow.get('orientation') || [];\nvar compass = flow.get('compass') || [];\nvar timestamp = flow.get('timestamp' || []);\nvar figure = flow.get('figure');\nvar userid = flow.get('userid');\nvar motionset = flow.get('motionset');\nvar dat = new Date();\n\n// Enhance Metadata\nmsg.payload.device = \"tjbot-02\";\nmsg.payload.userid = userid;\nmsg.payload.figure = figure;\nmsg.payload.motionset = motionset;\nmsg.payload.timestamp = Math.floor(dat);\nmsg.payload.date = dat.toJSON();\n\n// Push and store values\nmotions.push(msg.payload);\nacceleration.push(msg.payload.acceleration);\nqyroscope.push(msg.payload.qyroscope);\norientation.push(msg.payload.orientation);\ncompass.push(msg.payload.compass);\ntimestamp.push(msg.payload.timestamp);\n\n// Store Environment\nflow.set('motions',motions);\nflow.set('acceleration', acceleration);\nflow.set('qyroscope', qyroscope);\nflow.set('orientation', orientation);\nflow.set('compass',compass);\nflow.set('timestamp',timestamp);\nflow.set('recorded', true);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 740,
        "wires": [
            [
                "87be9c23.cc53"
            ]
        ]
    },
    {
        "id": "311d6f1.618e59",
        "type": "debug",
        "z": "bc791889.602d28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 850,
        "y": 840,
        "wires": []
    },
    {
        "id": "1c96099a.5add96",
        "type": "ui_button",
        "z": "bc791889.602d28",
        "name": "Start",
        "group": "70e762f3.1cf1ac",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Start Recording",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 430,
        "y": 420,
        "wires": [
            [
                "8eb0c98a.a37ef8",
                "aaf1dc1d.64de2"
            ]
        ]
    },
    {
        "id": "8dfe5325.6508c",
        "type": "ui_button",
        "z": "bc791889.602d28",
        "name": "Stop",
        "group": "70e762f3.1cf1ac",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Stop Recording",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "8eb0c98a.a37ef8"
            ]
        ]
    },
    {
        "id": "c657a8ae.b91d58",
        "type": "ui_text",
        "z": "bc791889.602d28",
        "group": "70e762f3.1cf1ac",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Motion Recording",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1050,
        "y": 420,
        "wires": []
    },
    {
        "id": "8eb0c98a.a37ef8",
        "type": "change",
        "z": "bc791889.602d28",
        "name": "Set Motion",
        "rules": [
            {
                "t": "set",
                "p": "store",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "6fa5492c.af9e08",
                "403239c.efd2bc8"
            ]
        ]
    },
    {
        "id": "52bb6c35.659714",
        "type": "switch",
        "z": "bc791889.602d28",
        "name": "Store ?",
        "property": "store",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 820,
        "wires": [
            [
                "d33c0eaa.b8c44"
            ],
            [
                "6211737c.d3602c"
            ]
        ]
    },
    {
        "id": "6211737c.d3602c",
        "type": "switch",
        "z": "bc791889.602d28",
        "name": "Recorded ?",
        "property": "recorded",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 900,
        "wires": [
            [
                "ed3479bb.4fc8f8"
            ]
        ]
    },
    {
        "id": "ed3479bb.4fc8f8",
        "type": "change",
        "z": "bc791889.602d28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "recorded",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "motions",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 900,
        "wires": [
            [
                "311d6f1.618e59",
                "e2c1cafe.b2a538",
                "e63cfddf.abfe8"
            ]
        ]
    },
    {
        "id": "aaf1dc1d.64de2",
        "type": "change",
        "z": "bc791889.602d28",
        "name": "None",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "recorded",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 460,
        "wires": [
            [
                "83dcb744.1d96c8"
            ]
        ]
    },
    {
        "id": "377aebaa.5b38a4",
        "type": "link in",
        "z": "bc791889.602d28",
        "name": "Store ",
        "links": [
            "e2c1cafe.b2a538"
        ],
        "x": 135,
        "y": 1160,
        "wires": [
            [
                "4433836.a20067c"
            ]
        ]
    },
    {
        "id": "e2c1cafe.b2a538",
        "type": "link out",
        "z": "bc791889.602d28",
        "name": "Jump Detect",
        "links": [
            "377aebaa.5b38a4"
        ],
        "x": 815,
        "y": 900,
        "wires": []
    },
    {
        "id": "8db26356.0469a",
        "type": "ui_dropdown",
        "z": "bc791889.602d28",
        "name": "",
        "label": "Figure",
        "place": "Select option",
        "group": "70e762f3.1cf1ac",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "0",
                "value": "0",
                "type": "str"
            },
            {
                "label": "1",
                "value": "1",
                "type": "str"
            },
            {
                "label": "2",
                "value": "2",
                "type": "str"
            },
            {
                "label": "3",
                "value": "3",
                "type": "str"
            },
            {
                "label": "4",
                "value": "4",
                "type": "str"
            },
            {
                "label": "5",
                "value": "5",
                "type": "str"
            },
            {
                "label": "6",
                "value": "6",
                "type": "str"
            },
            {
                "label": "7",
                "value": "7",
                "type": "str"
            },
            {
                "label": "8",
                "value": "8",
                "type": "str"
            },
            {
                "label": "9",
                "value": "9",
                "type": "str"
            },
            {
                "label": "-",
                "value": "-",
                "type": "str"
            },
            {
                "label": "+",
                "value": "+",
                "type": "str"
            },
            {
                "label": "/",
                "value": "/",
                "type": "str"
            },
            {
                "label": "x",
                "value": "x",
                "type": "str"
            },
            {
                "label": "=",
                "value": "=",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 510,
        "y": 240,
        "wires": [
            [
                "4e6f5a0d.80e354",
                "cccd7532.907378"
            ]
        ]
    },
    {
        "id": "4e6f5a0d.80e354",
        "type": "change",
        "z": "bc791889.602d28",
        "name": "Set Figure",
        "rules": [
            {
                "t": "set",
                "p": "figure",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 240,
        "wires": [
            [
                "8a295387.a0694"
            ]
        ]
    },
    {
        "id": "10b63da7.c613c2",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "Init Environment",
        "func": "// Set defaults for choice \n//     {\"/\":\"/\"}\nvar figures = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"+\", \"-\", \"/\", \"x\", \"=\"];\n\n// store --> every event into array\nflow.set('store',false);\n\n// recorded --> the set is ready to save\nflow.set('recorded', false);\n\n// Array of recorded elements\nflow.set('motions',[]);\nflow.set('acceleration',[]);\nflow.set('qyroscope', []);\nflow.set('orientation', []);\nflow.set('compass',[]);\nflow.set('timestamp',[]);\nflow.set('userid',1);\nflow.set('figures', figures);\nflow.set('curfig',0);\n\n// Set Figure to default\nmsg.options = figures;\nmsg.payload = \"0\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 240,
        "wires": [
            [
                "8db26356.0469a",
                "45b27009.83115"
            ]
        ]
    },
    {
        "id": "9989338f.076d6",
        "type": "comment",
        "z": "bc791889.602d28",
        "name": "Handle Motions",
        "info": "",
        "x": 120,
        "y": 760,
        "wires": []
    },
    {
        "id": "e86c96c2.bf4c08",
        "type": "comment",
        "z": "bc791889.602d28",
        "name": "Detect figure",
        "info": "",
        "x": 110,
        "y": 1020,
        "wires": []
    },
    {
        "id": "ca608977.3fc958",
        "type": "link in",
        "z": "bc791889.602d28",
        "name": "Show recorded Elements",
        "links": [
            "83dcb744.1d96c8",
            "8a295387.a0694",
            "bc6909a1.3cba88"
        ],
        "x": 75,
        "y": 580,
        "wires": [
            [
                "7588cb95.0d56b4"
            ]
        ]
    },
    {
        "id": "83dcb744.1d96c8",
        "type": "link out",
        "z": "bc791889.602d28",
        "name": "Jump show",
        "links": [
            "ca608977.3fc958"
        ],
        "x": 675,
        "y": 460,
        "wires": []
    },
    {
        "id": "8a295387.a0694",
        "type": "link out",
        "z": "bc791889.602d28",
        "name": "Jump show",
        "links": [
            "ca608977.3fc958"
        ],
        "x": 795,
        "y": 240,
        "wires": []
    },
    {
        "id": "e63cfddf.abfe8",
        "type": "change",
        "z": "bc791889.602d28",
        "name": "Set length",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.length",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 960,
        "wires": [
            [
                "bc6909a1.3cba88"
            ]
        ]
    },
    {
        "id": "bc6909a1.3cba88",
        "type": "link out",
        "z": "bc791889.602d28",
        "name": "Jump show",
        "links": [
            "ca608977.3fc958"
        ],
        "x": 955,
        "y": 960,
        "wires": []
    },
    {
        "id": "2a98eae2.6fce46",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "Reset Arrays",
        "func": "// reset arrays \nflow.set('motions',[]);\nflow.set('acceleration',[]);\nflow.set('qyroscope', []);\nflow.set('orientation', []);\nflow.set('compass',[]);\nflow.set('timestamp',[]);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "6b4edbfc.1398b4",
        "type": "ui_numeric",
        "z": "bc791889.602d28",
        "name": "",
        "label": "UserId",
        "group": "70e762f3.1cf1ac",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 690,
        "y": 180,
        "wires": [
            [
                "e560c797.539548"
            ]
        ]
    },
    {
        "id": "45b27009.83115",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "Gen UserID",
        "func": "msg.payload = Math.floor(Math.random() * Math.floor(100));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "6b4edbfc.1398b4"
            ]
        ]
    },
    {
        "id": "e560c797.539548",
        "type": "change",
        "z": "bc791889.602d28",
        "name": "Set userid",
        "rules": [
            {
                "t": "set",
                "p": "userid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b1155623.de4e78",
        "type": "inject",
        "z": "bc791889.602d28",
        "name": "Send On",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "6ff757f9.863f68"
            ]
        ]
    },
    {
        "id": "d14cb30a.a0c4a",
        "type": "change",
        "z": "bc791889.602d28",
        "name": "Train",
        "rules": [
            {
                "t": "set",
                "p": "train",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "42c0b645.f00628",
        "type": "inject",
        "z": "bc791889.602d28",
        "name": "Send Off",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 240,
        "wires": [
            [
                "6ff757f9.863f68",
                "10b63da7.c613c2",
                "8dfe5325.6508c"
            ]
        ]
    },
    {
        "id": "6ff757f9.863f68",
        "type": "ui_switch",
        "z": "bc791889.602d28",
        "name": "",
        "label": "Detect / Train",
        "group": "70e762f3.1cf1ac",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "d14cb30a.a0c4a"
            ]
        ]
    },
    {
        "id": "7ea5eaa7.a59544",
        "type": "rpi-sensehat in",
        "z": "bc791889.602d28",
        "name": "Joystick",
        "motion": false,
        "env": false,
        "stick": true,
        "x": 90,
        "y": 380,
        "wires": [
            [
                "1663740f.4d204c"
            ]
        ]
    },
    {
        "id": "1663740f.4d204c",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "start / stop",
        "func": "// get store \nvar store = flow.get(\"store\");\n\n// get the values from the SenseHAT\nvar key = msg.payload.key;\nvar state = msg.payload.state;\n\n// ret messages\nvar msg1 = null;\nvar msg2 = null;\nvar msg3 = null;\n\nif (key === \"ENTER\" && state === 1) {\n    if (store === true) {\n        msg2 = { payload: false };\n        flow.set(\"store\", false);\n    } else {\n        msg3 = { payload: true };\n        flow.set(\"store\", true);\n        flow.set(\"motionset\", new Date());\n    }\n} else if (key === \"UP\" && state === 1) {\n    var figures = flow.get('figures');\n    var curfig = flow.get('curfig') + 1;\n    if (curfig === figures.length) {\n        curfig = 0;\n    }\n    flow.set('curfig', curfig);\n    msg1 = { payload: figures[curfig] };\n} else if (key === \"DOWN\" && state === 1) {\n    var figures = flow.get('figures');\n    var curfig = flow.get('curfig') - 1;\n    if (curfig < 0) {\n        curfig = figures.length-1;\n    }\n    flow.set('curfig', curfig);\n    msg1 = { payload: figures[curfig] };\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "x": 250,
        "y": 380,
        "wires": [
            [
                "8db26356.0469a"
            ],
            [
                "8dfe5325.6508c"
            ],
            [
                "1c96099a.5add96"
            ]
        ]
    },
    {
        "id": "8077abd1.e18a88",
        "type": "debug",
        "z": "bc791889.602d28",
        "name": "IoT Sent Motions",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 850,
        "y": 700,
        "wires": []
    },
    {
        "id": "87be9c23.cc53",
        "type": "switch",
        "z": "bc791889.602d28",
        "name": "Send ?",
        "property": "train",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 740,
        "wires": [
            [
                "8077abd1.e18a88",
                "f934cbfb.da2798"
            ]
        ]
    },
    {
        "id": "d25d63ab.5651d",
        "type": "rpi-sensehat out",
        "z": "bc791889.602d28",
        "name": "",
        "x": 190,
        "y": 660,
        "wires": []
    },
    {
        "id": "cccd7532.907378",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "HAT Msg",
        "func": "var rotation = global.get(\"rotation\");\n\nif (rotation) {\n    msg.payload = rotation + \"\\n\" + msg.payload;\n}\n\nmsg.speed = 4;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 676,
        "y": 299.5,
        "wires": [
            [
                "554ddc5c.7edc44"
            ]
        ]
    },
    {
        "id": "4433836.a20067c",
        "type": "switch",
        "z": "bc791889.602d28",
        "name": "Detect ?",
        "property": "train",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 1160,
        "wires": [
            [
                "2a98eae2.6fce46",
                "9e5f91.204f407",
                "900b8e0d.a4838"
            ],
            [
                "2a98eae2.6fce46"
            ]
        ]
    },
    {
        "id": "9e5f91.204f407",
        "type": "debug",
        "z": "bc791889.602d28",
        "name": "Motion Event Array",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 470,
        "y": 1080,
        "wires": []
    },
    {
        "id": "f934cbfb.da2798",
        "type": "wiotp out",
        "z": "bc791889.602d28",
        "authType": "d",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "787dd67f.06a908",
        "deviceType": "",
        "deviceId": "",
        "event": "motions",
        "format": "json",
        "qos": "",
        "name": "Send to IBM IoTF",
        "x": 850,
        "y": 760,
        "wires": []
    },
    {
        "id": "6fa5492c.af9e08",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "Highlight figure",
        "func": "var rotation = global.get(\"rotation\");\nvar figure = flow.get('figure') || '';\nvar train = (flow.get('train') === true);\nvar store = (flow.get('store') === true);\n\nif (rotation) {\n    msg.payload = rotation + \"\\n\" + (train ? figure : '>')\n}\n\nif (store) {\n    msg.color = (train ? 'red' : 'green') \n}\n\nmsg.speed = 4\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 360,
        "wires": [
            [
                "8f75d204.3911"
            ]
        ]
    },
    {
        "id": "900b8e0d.a4838",
        "type": "python3-function",
        "z": "bc791889.602d28",
        "name": "Py: Feature Vector",
        "func": "import numpy as np\n\n# parameter:\n#   w ... number of points for interpolation. Must be the same as during learning the model\nw = 25\n\n# payload is the array of motion events\npayload = msg['payload']\n\n# filter out to short motions\nif len(payload) < 4:\n    raise RuntimeError(\"To short a motion. Will not classify ..\")\n\n# time stamps of recorded data in form of numpy vector\nt_rec = np.array([e['timestamp'] for e in payload])\n\n# accelaration data in form of a numpy array of shape (len(payload),3)\na_rec = np.array([\n    [e['acceleration'][col] for col in ('x', 'y', 'z')] for e in payload\n])\n    \n# make a regular linear space from the begining to the end\nt_int = np.linspace(t_rec[0], t_rec[-1], w)\n\n# now interpolate the x, y, and z coordinate\na_int = np.zeros((w, 3))\nfor j in (0,1,2):\n    a_int[:,j] = np.interp(t_int, t_rec, a_rec[:,j])\n\n# make a feature vector out of the data\nfeatures=list(a_int.reshape(-1))\n\n# plug the feature vector into the payload\nmsg['payload'] = [features]\n\nreturn msg\n",
        "outputs": 1,
        "x": 490,
        "y": 1140,
        "wires": [
            [
                "2a7fdbac.784714",
                "9d6ea6d3.8e93a8"
            ]
        ]
    },
    {
        "id": "2a7fdbac.784714",
        "type": "debug",
        "z": "bc791889.602d28",
        "name": "Feature Vector",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 720,
        "y": 1080,
        "wires": []
    },
    {
        "id": "bc412a2f.4144a8",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "Display detected figure",
        "func": "// read the gloabl rotation value\nvar rotation = global.get(\"rotation\");\n\n// the result of the ML model is stored in msg.scoring.values\n// as it is a list of lists we need the [0][0] access.\nfigure = msg.payload.values[0][0]\n\n// display the predicted figure in blue\nmsg.payload = rotation + \"\\n\" + figure;\nmsg.color = 'blue'\nmsg.speed = 4;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 1140,
        "wires": [
            [
                "bef6f5f8.797c78"
            ]
        ]
    },
    {
        "id": "403239c.efd2bc8",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "Set Message",
        "func": "msg.payload = msg.payload ? 'running' : 'stopped';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 420,
        "wires": [
            [
                "c657a8ae.b91d58",
                "3e51c83.7a52d38"
            ]
        ]
    },
    {
        "id": "e37afcb6.8dd74",
        "type": "ui_text",
        "z": "bc791889.602d28",
        "group": "70e762f3.1cf1ac",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Classification",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 190,
        "y": 620,
        "wires": []
    },
    {
        "id": "a1a0da8e.114b68",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "Show classification",
        "func": "// the result of the ML model is stored in msg.scoring.values\n// as it is a list of lists we need the [0][0] access.\nfigure = msg.payload.values[0][0]\nmsg.payload = figure;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 1200,
        "wires": [
            [
                "443c5869.b1e158"
            ]
        ]
    },
    {
        "id": "3e51c83.7a52d38",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "Reset classification",
        "func": "if (msg.payload) {\n    msg.payload = '';\n    return msg;\n} else {\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 460,
        "wires": [
            [
                "937e2453.ab56b8"
            ]
        ]
    },
    {
        "id": "9d6ea6d3.8e93a8",
        "type": "wml",
        "z": "bc791889.602d28",
        "name": "Digit Predict",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "runPrediction",
        "model": "e4288993-9a96-4c4e-8ba4-0b65fc729870",
        "deployment": "fc60458e-3394-49cf-bca2-848d5ea54a6b",
        "modelhidden": "e4288993-9a96-4c4e-8ba4-0b65fc729870",
        "deploymenthidden": "",
        "x": 710,
        "y": 1140,
        "wires": [
            [
                "a81bcbdd.228798",
                "a98f35d3.fe4f68",
                "bc412a2f.4144a8",
                "a1a0da8e.114b68"
            ]
        ]
    },
    {
        "id": "a81bcbdd.228798",
        "type": "debug",
        "z": "bc791889.602d28",
        "name": "Prediction Outcome",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 970,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a98f35d3.fe4f68",
        "type": "function",
        "z": "bc791889.602d28",
        "name": "Spoken Words",
        "func": "msg.payload = 'Figure found is ' + msg.payload.values[0][0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 1260,
        "wires": [
            [
                "59ecd125.08acb"
            ]
        ]
    },
    {
        "id": "59ecd125.08acb",
        "type": "watson-text-to-speech",
        "z": "bc791889.602d28",
        "name": "",
        "lang": "en-GB",
        "langhidden": "en-GB",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "voice": "en-GB_KateVoice",
        "voicehidden": "en-US_MichaelVoice",
        "format": "audio/wav",
        "password": "",
        "apikey": "kAZvmknmqsmpoFTp3y3mN_GMC5Sb3PNY8JrSWM8AWvPo",
        "payload-response": false,
        "default-endpoint": false,
        "service-endpoint": "https://stream-fra.watsonplatform.net/text-to-speech/api",
        "x": 1140,
        "y": 1260,
        "wires": [
            [
                "2bdd239f.f8728c"
            ]
        ]
    },
    {
        "id": "2bdd239f.f8728c",
        "type": "speakerpi-output",
        "z": "bc791889.602d28",
        "choose": "filebased",
        "filename": "",
        "channels": "1",
        "bitdepth": "8",
        "samplerate": "22050",
        "name": "Speak",
        "x": 1310,
        "y": 1260,
        "wires": []
    },
    {
        "id": "3d647db0.6780c2",
        "type": "link in",
        "z": "bc791889.602d28",
        "name": "Jump Classification",
        "links": [
            "443c5869.b1e158",
            "937e2453.ab56b8"
        ],
        "x": 75,
        "y": 620,
        "wires": [
            [
                "e37afcb6.8dd74"
            ]
        ]
    },
    {
        "id": "443c5869.b1e158",
        "type": "link out",
        "z": "bc791889.602d28",
        "name": "Jump to Classification",
        "links": [
            "3d647db0.6780c2"
        ],
        "x": 1135,
        "y": 1200,
        "wires": []
    },
    {
        "id": "937e2453.ab56b8",
        "type": "link out",
        "z": "bc791889.602d28",
        "name": "Jump to Classification",
        "links": [
            "3d647db0.6780c2"
        ],
        "x": 1195,
        "y": 460,
        "wires": []
    },
    {
        "id": "606c4419.e7037c",
        "type": "switch",
        "z": "8605b5aa.204638",
        "name": "Recorded ?",
        "property": "recorded",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 860,
        "wires": [
            [
                "404537c7.350758"
            ]
        ]
    },
    {
        "id": "dbc3913b.00b2a",
        "type": "ui_text",
        "z": "8605b5aa.204638",
        "group": "d7de477f.967218",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Recoded events:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 210,
        "y": 520,
        "wires": []
    },
    {
        "id": "e23746b3.4f6598",
        "type": "comment",
        "z": "8605b5aa.204638",
        "name": "Motion Training - Demo Flow",
        "info": "",
        "x": 140,
        "y": 20,
        "wires": []
    },
    {
        "id": "22828437.ca1c6c",
        "type": "rpi-sensehat in",
        "z": "8605b5aa.204638",
        "name": "Motions",
        "motion": true,
        "env": false,
        "stick": false,
        "x": 90,
        "y": 800,
        "wires": [
            [
                "5f7bffaa.5444"
            ]
        ]
    },
    {
        "id": "9baf86b6.989938",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Store Motions",
        "func": "// Get Motion Array\nvar motions = flow.get('motions') || [];\nvar acceleration = flow.get('acceleration') || [];\nvar qyroscope = flow.get('qyroscope') || [];\nvar orientation = flow.get('orientation') || [];\nvar compass = flow.get('compass') || [];\nvar timestamp = flow.get('timestamp' || []);\nvar figure = flow.get('figure');\nvar userid = flow.get('userid');\nvar motionset = flow.get('motionset');\nvar dat = new Date();\n\n// Enhance Metadata\nmsg.payload.device = \"tjbot-02\";\nmsg.payload.userid = userid;\nmsg.payload.figure = figure;\nmsg.payload.motionset = motionset;\nmsg.payload.timestamp = Math.floor(dat);\nmsg.payload.date = dat.toJSON();\n\n// Push and store values\nmotions.push(msg.payload);\nacceleration.push(msg.payload.acceleration);\nqyroscope.push(msg.payload.qyroscope);\norientation.push(msg.payload.orientation);\ncompass.push(msg.payload.compass);\ntimestamp.push(msg.payload.timestamp);\n\n// Store Environment\nflow.set('motions',motions);\nflow.set('acceleration', acceleration);\nflow.set('qyroscope', qyroscope);\nflow.set('orientation', orientation);\nflow.set('compass',compass);\nflow.set('timestamp',timestamp);\nflow.set('recorded', true);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 740,
        "wires": [
            [
                "90fffd8c.a1d42"
            ]
        ]
    },
    {
        "id": "57bd09dd.c8f2c8",
        "type": "debug",
        "z": "8605b5aa.204638",
        "name": "Recorded Elements",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 850,
        "y": 820,
        "wires": []
    },
    {
        "id": "ddf6a623.eaa7f8",
        "type": "ui_button",
        "z": "8605b5aa.204638",
        "name": "Start",
        "group": "d7de477f.967218",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Start Recording",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "fc043f8a.0e326",
                "3087b1a3.dc4bae"
            ]
        ]
    },
    {
        "id": "4ea75d8a.8ac764",
        "type": "ui_button",
        "z": "8605b5aa.204638",
        "name": "Stop",
        "group": "d7de477f.967218",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Stop Recording",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "",
        "x": 430,
        "y": 320,
        "wires": [
            [
                "fc043f8a.0e326"
            ]
        ]
    },
    {
        "id": "77a665ca.78094c",
        "type": "ui_text",
        "z": "8605b5aa.204638",
        "group": "d7de477f.967218",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Motion Recording",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1050,
        "y": 380,
        "wires": []
    },
    {
        "id": "fc043f8a.0e326",
        "type": "change",
        "z": "8605b5aa.204638",
        "name": "Set Motion",
        "rules": [
            {
                "t": "set",
                "p": "store",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 320,
        "wires": [
            [
                "2baf6c9.0648594",
                "2f8ff1b.0c3910e"
            ]
        ]
    },
    {
        "id": "5f7bffaa.5444",
        "type": "switch",
        "z": "8605b5aa.204638",
        "name": "Store ?",
        "property": "store",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 800,
        "wires": [
            [
                "9baf86b6.989938"
            ],
            [
                "606c4419.e7037c"
            ]
        ]
    },
    {
        "id": "404537c7.350758",
        "type": "change",
        "z": "8605b5aa.204638",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "recorded",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "motions",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 860,
        "wires": [
            [
                "57bd09dd.c8f2c8",
                "7c763a0c.3f3f74",
                "a83e6771.607cb8"
            ]
        ]
    },
    {
        "id": "3087b1a3.dc4bae",
        "type": "change",
        "z": "8605b5aa.204638",
        "name": "None",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "recorded",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 420,
        "wires": [
            [
                "2ce9a2b2.d0814e"
            ]
        ]
    },
    {
        "id": "492c6db2.94ea94",
        "type": "link in",
        "z": "8605b5aa.204638",
        "name": "Store ",
        "links": [
            "7c763a0c.3f3f74"
        ],
        "x": 75,
        "y": 1080,
        "wires": [
            [
                "6d7bd231.98ce3c"
            ]
        ]
    },
    {
        "id": "7c763a0c.3f3f74",
        "type": "link out",
        "z": "8605b5aa.204638",
        "name": "Jump Detect",
        "links": [
            "492c6db2.94ea94"
        ],
        "x": 775,
        "y": 860,
        "wires": []
    },
    {
        "id": "d1ae4033.0fe0b",
        "type": "ui_dropdown",
        "z": "8605b5aa.204638",
        "name": "",
        "label": "Figure",
        "place": "Select option",
        "group": "d7de477f.967218",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "0",
                "value": "0",
                "type": "str"
            },
            {
                "label": "1",
                "value": "1",
                "type": "str"
            },
            {
                "label": "2",
                "value": "2",
                "type": "str"
            },
            {
                "label": "3",
                "value": "3",
                "type": "str"
            },
            {
                "label": "4",
                "value": "4",
                "type": "str"
            },
            {
                "label": "5",
                "value": "5",
                "type": "str"
            },
            {
                "label": "6",
                "value": "6",
                "type": "str"
            },
            {
                "label": "7",
                "value": "7",
                "type": "str"
            },
            {
                "label": "8",
                "value": "8",
                "type": "str"
            },
            {
                "label": "9",
                "value": "9",
                "type": "str"
            },
            {
                "label": "-",
                "value": "-",
                "type": "str"
            },
            {
                "label": "+",
                "value": "+",
                "type": "str"
            },
            {
                "label": "/",
                "value": "/",
                "type": "str"
            },
            {
                "label": "x",
                "value": "x",
                "type": "str"
            },
            {
                "label": "=",
                "value": "=",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 510,
        "y": 200,
        "wires": [
            [
                "dbddd17d.db182",
                "10fc35ca.fd991a"
            ]
        ]
    },
    {
        "id": "dbddd17d.db182",
        "type": "change",
        "z": "8605b5aa.204638",
        "name": "Set Figure",
        "rules": [
            {
                "t": "set",
                "p": "figure",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "3c539006.47f35"
            ]
        ]
    },
    {
        "id": "f17543f6.1c3a2",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Init Environment",
        "func": "// Set defaults for choice \n//     {\"/\":\"/\"}\nvar figures = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"+\", \"-\", \"/\", \"x\", \"=\"];\n\n// store --> every event into array\nflow.set('store',false);\n\n// recorded --> the set is ready to save\nflow.set('recorded', false);\n\n// Array of recorded elements\nflow.set('motions',[]);\nflow.set('acceleration',[]);\nflow.set('qyroscope', []);\nflow.set('orientation', []);\nflow.set('compass',[]);\nflow.set('timestamp',[]);\nflow.set('userid',1);\nflow.set('figures', figures);\nflow.set('curfig',0);\n\n// Set Figure to default\nmsg.options = figures;\nmsg.payload = \"0\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 200,
        "wires": [
            [
                "d1ae4033.0fe0b",
                "9c83fc4b.ef40c"
            ]
        ]
    },
    {
        "id": "36503a3a.bb2b76",
        "type": "comment",
        "z": "8605b5aa.204638",
        "name": "Handle Motions",
        "info": "",
        "x": 120,
        "y": 660,
        "wires": []
    },
    {
        "id": "666f2343.2e02fc",
        "type": "comment",
        "z": "8605b5aa.204638",
        "name": "Detect figure",
        "info": "",
        "x": 110,
        "y": 940,
        "wires": []
    },
    {
        "id": "12780e85.7c07e1",
        "type": "link in",
        "z": "8605b5aa.204638",
        "name": "Show recorded Elements",
        "links": [
            "2ce9a2b2.d0814e",
            "3c539006.47f35",
            "2edf9576.35709a"
        ],
        "x": 75,
        "y": 520,
        "wires": [
            [
                "dbc3913b.00b2a"
            ]
        ]
    },
    {
        "id": "2ce9a2b2.d0814e",
        "type": "link out",
        "z": "8605b5aa.204638",
        "name": "Jump show",
        "links": [
            "12780e85.7c07e1"
        ],
        "x": 675,
        "y": 420,
        "wires": []
    },
    {
        "id": "3c539006.47f35",
        "type": "link out",
        "z": "8605b5aa.204638",
        "name": "Jump show",
        "links": [
            "12780e85.7c07e1"
        ],
        "x": 795,
        "y": 200,
        "wires": []
    },
    {
        "id": "a83e6771.607cb8",
        "type": "change",
        "z": "8605b5aa.204638",
        "name": "Set length",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.length",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 900,
        "wires": [
            [
                "2edf9576.35709a"
            ]
        ]
    },
    {
        "id": "2edf9576.35709a",
        "type": "link out",
        "z": "8605b5aa.204638",
        "name": "Jump show",
        "links": [
            "12780e85.7c07e1"
        ],
        "x": 935,
        "y": 900,
        "wires": []
    },
    {
        "id": "4b60e99b.b750d8",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Reset Arrays",
        "func": "// reset arrays \nflow.set('motions',[]);\nflow.set('acceleration',[]);\nflow.set('qyroscope', []);\nflow.set('orientation', []);\nflow.set('compass',[]);\nflow.set('timestamp',[]);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "f226ab2f.41a368",
        "type": "ui_numeric",
        "z": "8605b5aa.204638",
        "name": "",
        "label": "UserId",
        "group": "d7de477f.967218",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "319d9cbf.405bb4"
            ]
        ]
    },
    {
        "id": "9c83fc4b.ef40c",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Gen UserID",
        "func": "msg.payload = Math.floor(Math.random() * Math.floor(100));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 140,
        "wires": [
            [
                "f226ab2f.41a368"
            ]
        ]
    },
    {
        "id": "319d9cbf.405bb4",
        "type": "change",
        "z": "8605b5aa.204638",
        "name": "Set userid",
        "rules": [
            {
                "t": "set",
                "p": "userid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "eac4868f.ca9d68",
        "type": "inject",
        "z": "8605b5aa.204638",
        "name": "Send On",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 80,
        "wires": [
            [
                "9935c275.7dda1"
            ]
        ]
    },
    {
        "id": "b2bd42d4.15ada",
        "type": "change",
        "z": "8605b5aa.204638",
        "name": "Train",
        "rules": [
            {
                "t": "set",
                "p": "train",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "11035693.e47a59",
        "type": "inject",
        "z": "8605b5aa.204638",
        "name": "Send Off",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "9935c275.7dda1",
                "f17543f6.1c3a2",
                "4ea75d8a.8ac764"
            ]
        ]
    },
    {
        "id": "9935c275.7dda1",
        "type": "ui_switch",
        "z": "8605b5aa.204638",
        "name": "",
        "label": "Detect / Train",
        "group": "d7de477f.967218",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "b2bd42d4.15ada"
            ]
        ]
    },
    {
        "id": "2246715.234b28e",
        "type": "rpi-sensehat in",
        "z": "8605b5aa.204638",
        "name": "Joystick",
        "motion": false,
        "env": false,
        "stick": true,
        "x": 90,
        "y": 340,
        "wires": [
            [
                "a7c0ae79.facc7"
            ]
        ]
    },
    {
        "id": "a7c0ae79.facc7",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "start / stop",
        "func": "// get store \nvar store = flow.get(\"store\");\n\n// get the values from the SenseHAT\nvar key = msg.payload.key;\nvar state = msg.payload.state;\n\n// ret messages\nvar msg1 = null;\nvar msg2 = null;\nvar msg3 = null;\n\nif (key === \"ENTER\" && state === 1) {\n    if (store === true) {\n        msg2 = { payload: false };\n        flow.set(\"store\", false);\n    } else {\n        msg3 = { payload: true };\n        flow.set(\"store\", true);\n        flow.set(\"motionset\", new Date());\n    }\n} else if (key === \"UP\" && state === 1) {\n    if (store === false) {\n        var figures = flow.get('figures');\n        var curfig = flow.get('curfig') + 1;\n        if (curfig === figures.length) {\n            curfig = 0;\n        }\n        flow.set('curfig', curfig);\n        msg1 = { payload: figures[curfig] };\n    }\n} else if (key === \"DOWN\" && state === 1) {\n    if (store === false) {\n        var figures = flow.get('figures');\n        var curfig = flow.get('curfig') - 1;\n        if (curfig < 0) {\n            curfig = figures.length-1;\n        }\n        flow.set('curfig', curfig);\n        msg1 = { payload: figures[curfig] };\n    }\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "x": 250,
        "y": 340,
        "wires": [
            [
                "d1ae4033.0fe0b"
            ],
            [
                "4ea75d8a.8ac764"
            ],
            [
                "ddf6a623.eaa7f8"
            ]
        ]
    },
    {
        "id": "f12612a9.93ec2",
        "type": "debug",
        "z": "8605b5aa.204638",
        "name": "IoT Sent Motions",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 830,
        "y": 700,
        "wires": []
    },
    {
        "id": "90fffd8c.a1d42",
        "type": "switch",
        "z": "8605b5aa.204638",
        "name": "Send ?",
        "property": "train",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 740,
        "wires": [
            [
                "f12612a9.93ec2",
                "e648018.7cc5"
            ]
        ]
    },
    {
        "id": "6504f80a.554ac8",
        "type": "rpi-sensehat out",
        "z": "8605b5aa.204638",
        "name": "SenseHAT Display",
        "x": 210,
        "y": 560,
        "wires": []
    },
    {
        "id": "10fc35ca.fd991a",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "HAT Msg",
        "func": "var rotation = global.get(\"rotation\");\n\nif (rotation) {\n    msg.payload = rotation + \"\\n\" + msg.payload;\n}\n\nmsg.speed = 4;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 676,
        "y": 259.5,
        "wires": [
            [
                "977458de.bfce68"
            ]
        ]
    },
    {
        "id": "6d7bd231.98ce3c",
        "type": "switch",
        "z": "8605b5aa.204638",
        "name": "Detect ?",
        "property": "train",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 200,
        "y": 1080,
        "wires": [
            [
                "4b60e99b.b750d8",
                "68dac42b.515f4c",
                "e69f45b9.c0b698"
            ],
            [
                "4b60e99b.b750d8"
            ]
        ]
    },
    {
        "id": "68dac42b.515f4c",
        "type": "debug",
        "z": "8605b5aa.204638",
        "name": "Motion Event Array",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 430,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e648018.7cc5",
        "type": "wiotp out",
        "z": "8605b5aa.204638",
        "authType": "d",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "787dd67f.06a908",
        "deviceType": "",
        "deviceId": "",
        "event": "motions",
        "format": "json",
        "qos": "",
        "name": "Send to IBM IoTF",
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "2baf6c9.0648594",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Highlight figure",
        "func": "var rotation = global.get(\"rotation\");\nvar figure = flow.get('figure') || '';\nvar train = (flow.get('train') === true);\nvar store = (flow.get('store') === true);\n\nif (rotation) {\n    msg.payload = rotation + \"\\n\" + (train ? figure : '>')\n}\n\nif (store) {\n    msg.color = (train ? 'red' : 'green') \n}\n\nmsg.speed = 4\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 320,
        "wires": [
            [
                "842f323d.2f3b9"
            ]
        ]
    },
    {
        "id": "8d45d703.aa0988",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Classification for SenseHAT",
        "func": "// read the gloabl rotation value\nvar rotation = global.get(\"rotation\");\n\n// display the predicted figure in blue\nmsg.payload = rotation + \"\\n\" + msg.payload.figure;\nmsg.color = 'blue'\nmsg.speed = 4;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 1220,
        "wires": [
            [
                "c801c64f.d8f0e8"
            ]
        ]
    },
    {
        "id": "2f8ff1b.0c3910e",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Set Message",
        "func": "msg.payload = msg.payload ? 'running' : 'stopped';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 380,
        "wires": [
            [
                "77a665ca.78094c",
                "28ecfc31.b6f584"
            ]
        ]
    },
    {
        "id": "24c93f57.c3d7e",
        "type": "ui_text",
        "z": "8605b5aa.204638",
        "group": "d7de477f.967218",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Classification",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 190,
        "y": 480,
        "wires": []
    },
    {
        "id": "144a2a65.e3a846",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Classification for GUI",
        "func": "msg.payload = msg.payload.figure;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 1260,
        "wires": [
            [
                "cd336f2b.e0774"
            ]
        ]
    },
    {
        "id": "28ecfc31.b6f584",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Reset classification",
        "func": "if (msg.payload) {\n    msg.payload = '';\n    return msg;\n} else {\n    return null;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 420,
        "wires": [
            [
                "394ebdd7.1ba792"
            ]
        ]
    },
    {
        "id": "683a1ca9.d16f24",
        "type": "debug",
        "z": "8605b5aa.204638",
        "name": "Classification Outcome",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1000,
        "y": 1180,
        "wires": []
    },
    {
        "id": "1e1b1cbe.7d9d83",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Spoken Words",
        "func": "if (msg.payload.figure == '<no-motion>') {\n    msg.payload = 'You did not move the Raspi!';\n    \n} else if (msg.payload.figure == '<to-short>') {\n    msg.payload = 'The recorded motion was to short.';\n\n} else if (msg.payload.figure == '<unknown>') {\n    msg.payload = 'I could not clearly recognize what you have drawn.';\n\n} else {\n    msg.payload = 'You have drawn a ' + msg.payload.figure + '.';\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 1360,
        "wires": [
            [
                "33a0108b.ceb7",
                "d0f4104b.114ab"
            ]
        ]
    },
    {
        "id": "33a0108b.ceb7",
        "type": "watson-text-to-speech",
        "z": "8605b5aa.204638",
        "name": "",
        "lang": "en-GB",
        "langhidden": "en-GB",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "voice": "en-GB_KateVoice",
        "voicehidden": "en-US_MichaelVoice",
        "format": "audio/wav",
        "password": "",
        "apikey": "kAZvmknmqsmpoFTp3y3mN_GMC5Sb3PNY8JrSWM8AWvPo",
        "payload-response": false,
        "default-endpoint": false,
        "service-endpoint": "https://stream-fra.watsonplatform.net/text-to-speech/api",
        "x": 1200,
        "y": 1380,
        "wires": [
            [
                "47b256d4.cae608"
            ]
        ]
    },
    {
        "id": "47b256d4.cae608",
        "type": "speakerpi-output",
        "z": "8605b5aa.204638",
        "choose": "filebased",
        "filename": "",
        "channels": "1",
        "bitdepth": "8",
        "samplerate": "22050",
        "name": "Speak",
        "x": 1370,
        "y": 1380,
        "wires": []
    },
    {
        "id": "1f57c0d7.6c215f",
        "type": "link in",
        "z": "8605b5aa.204638",
        "name": "Jump Classification",
        "links": [
            "cd336f2b.e0774",
            "394ebdd7.1ba792"
        ],
        "x": 75,
        "y": 480,
        "wires": [
            [
                "24c93f57.c3d7e"
            ]
        ]
    },
    {
        "id": "cd336f2b.e0774",
        "type": "link out",
        "z": "8605b5aa.204638",
        "name": "Jump to Classification",
        "links": [
            "1f57c0d7.6c215f"
        ],
        "x": 1155,
        "y": 1260,
        "wires": []
    },
    {
        "id": "394ebdd7.1ba792",
        "type": "link out",
        "z": "8605b5aa.204638",
        "name": "Jump to Classification",
        "links": [
            "1f57c0d7.6c215f"
        ],
        "x": 1195,
        "y": 420,
        "wires": []
    },
    {
        "id": "e69f45b9.c0b698",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Classification Payload",
        "func": "msg.scoring_payload = {'values': msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 1060,
        "wires": [
            [
                "fb4b299c.7c1098",
                "531f3c9e.439d94"
            ]
        ]
    },
    {
        "id": "fb4b299c.7c1098",
        "type": "debug",
        "z": "8605b5aa.204638",
        "name": "Classification Payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "scoring_payload",
        "x": 720,
        "y": 1000,
        "wires": []
    },
    {
        "id": "531f3c9e.439d94",
        "type": "http request",
        "z": "8605b5aa.204638",
        "name": "Get Token",
        "method": "GET",
        "ret": "obj",
        "url": "https://eu-de.ml.cloud.ibm.com/v3/identity/token",
        "tls": "",
        "x": 691,
        "y": 1107,
        "wires": [
            [
                "245a7b5c.d95904",
                "ad8430b3.b4f71"
            ]
        ]
    },
    {
        "id": "dabbdae6.047bd8",
        "type": "http request",
        "z": "8605b5aa.204638",
        "name": "Get Classification",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 711,
        "y": 1227,
        "wires": [
            [
                "8d45d703.aa0988",
                "144a2a65.e3a846",
                "1e1b1cbe.7d9d83",
                "683a1ca9.d16f24"
            ]
        ]
    },
    {
        "id": "245a7b5c.d95904",
        "type": "function",
        "z": "8605b5aa.204638",
        "name": "Classification Request",
        "func": "msg.headers = {\n    \"Accept\": \"application/json\",\n    \"Authorization\": 'Bearer ' + msg.payload.token,\n    \"Content-Type\": \"application/json;charset=UTF-8\"\n};\n\n// msg.url = \"https://eu-de.ml.cloud.ibm.com/v3/wml_instances/c6cffbe7-484d-4ddc-ba18-11212d5417d8/deployments/f4298867-8bba-4f0c-a4a5-bbdfd67e7ed2/online\";\nmsg.url = \"https://eu-de.ml.cloud.ibm.com/v3/wml_instances/ca8827ac-42b3-4b43-bfdc-7eafb3bf054b/deployments/807820a6-7574-4c42-b40d-3922af76d841/online\";\n\nmsg.payload = msg.scoring_payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 721,
        "y": 1167,
        "wires": [
            [
                "dabbdae6.047bd8"
            ]
        ]
    },
    {
        "id": "dd15a248.0be36",
        "type": "comment",
        "z": "8605b5aa.204638",
        "name": "WML REST-API Call",
        "info": "",
        "x": 710,
        "y": 1060,
        "wires": []
    },
    {
        "id": "2890d7a4.965378",
        "type": "comment",
        "z": "8605b5aa.204638",
        "name": "Output the classified figure on the speaker",
        "info": "",
        "x": 1060,
        "y": 1300,
        "wires": []
    },
    {
        "id": "d0f4104b.114ab",
        "type": "debug",
        "z": "8605b5aa.204638",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1190,
        "y": 1340,
        "wires": []
    },
    {
        "id": "8d41bb7a.bf7c48",
        "type": "wml",
        "z": "4eb32f79.2f182",
        "name": "Service Instance Details",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "instanceDetails",
        "model": "e4288993-9a96-4c4e-8ba4-0b65fc729870",
        "deployment": "fc60458e-3394-49cf-bca2-848d5ea54a6b",
        "modelhidden": "e4288993-9a96-4c4e-8ba4-0b65fc729870",
        "deploymenthidden": "",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "8874fe65.1f44b"
            ]
        ]
    },
    {
        "id": "8a49a8f4.2f28e8",
        "type": "inject",
        "z": "4eb32f79.2f182",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 115,
        "y": 140,
        "wires": [
            [
                "8d41bb7a.bf7c48"
            ]
        ]
    },
    {
        "id": "555fc8a5.5a5148",
        "type": "debug",
        "z": "4eb32f79.2f182",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 912,
        "y": 430,
        "wires": []
    },
    {
        "id": "7984254d.aad0dc",
        "type": "inject",
        "z": "4eb32f79.2f182",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 115,
        "y": 230,
        "wires": [
            [
                "f0376bb9.e8e8d8"
            ]
        ]
    },
    {
        "id": "f0376bb9.e8e8d8",
        "type": "wml",
        "z": "4eb32f79.2f182",
        "name": "List Published Models",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "listModels",
        "modelhidden": "",
        "deploymenthidden": "",
        "x": 327,
        "y": 230,
        "wires": [
            [
                "7b39f7a2.e09428"
            ]
        ]
    },
    {
        "id": "47f6d99d.43b038",
        "type": "inject",
        "z": "4eb32f79.2f182",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 116,
        "y": 559,
        "wires": [
            [
                "344872ff.edd5ae"
            ]
        ]
    },
    {
        "id": "9847c45f.741348",
        "type": "wml",
        "z": "4eb32f79.2f182",
        "name": "Run Prediction",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "runPrediction",
        "model": "0c71e666-48d2-4a2d-896e-55ee73f452bd",
        "deployment": "8188398c-26ca-415f-a8e6-187f678cacad",
        "modelhidden": "",
        "deploymenthidden": "",
        "x": 509,
        "y": 558,
        "wires": [
            [
                "804eaae6.876688"
            ]
        ]
    },
    {
        "id": "2260bbfc.8132c4",
        "type": "link in",
        "z": "4eb32f79.2f182",
        "name": "wml out",
        "links": [
            "8874fe65.1f44b",
            "7b39f7a2.e09428",
            "804eaae6.876688",
            "b9085c13.90d34",
            "558086aa.380d08",
            "63ae0cda.4fa9b4",
            "af04c9b3.8ed8d8",
            "b7b5c7b8.80fd88",
            "250f73df.d60f4c",
            "28d2d7e.79e8328"
        ],
        "x": 757,
        "y": 429,
        "wires": [
            [
                "555fc8a5.5a5148"
            ]
        ]
    },
    {
        "id": "8874fe65.1f44b",
        "type": "link out",
        "z": "4eb32f79.2f182",
        "name": "",
        "links": [
            "2260bbfc.8132c4"
        ],
        "x": 493,
        "y": 140,
        "wires": []
    },
    {
        "id": "7b39f7a2.e09428",
        "type": "link out",
        "z": "4eb32f79.2f182",
        "name": "",
        "links": [
            "2260bbfc.8132c4"
        ],
        "x": 501,
        "y": 230,
        "wires": []
    },
    {
        "id": "804eaae6.876688",
        "type": "link out",
        "z": "4eb32f79.2f182",
        "name": "",
        "links": [
            "2260bbfc.8132c4"
        ],
        "x": 632,
        "y": 558,
        "wires": []
    },
    {
        "id": "7ecfffa.2fd14",
        "type": "comment",
        "z": "4eb32f79.2f182",
        "name": "Instance Method",
        "info": "",
        "x": 109,
        "y": 102,
        "wires": []
    },
    {
        "id": "38e9ff7f.5ee96",
        "type": "comment",
        "z": "4eb32f79.2f182",
        "name": "Published Model Methods",
        "info": "",
        "x": 140,
        "y": 188,
        "wires": []
    },
    {
        "id": "640b94b6.b90bdc",
        "type": "inject",
        "z": "4eb32f79.2f182",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 117,
        "y": 266,
        "wires": [
            [
                "d4a77d10.b5c9e"
            ]
        ]
    },
    {
        "id": "d4a77d10.b5c9e",
        "type": "wml",
        "z": "4eb32f79.2f182",
        "name": "Get Model Details",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "getModelDetails",
        "model": "82bcb769-216b-48af-bc6e-d0cd8a909407",
        "deployment": "5be4f991-67f6-40f9-890d-442d302b3605",
        "modelhidden": "82bcb769-216b-48af-bc6e-d0cd8a909407",
        "deploymenthidden": "",
        "x": 316,
        "y": 266,
        "wires": [
            [
                "b9085c13.90d34"
            ]
        ]
    },
    {
        "id": "b9085c13.90d34",
        "type": "link out",
        "z": "4eb32f79.2f182",
        "name": "",
        "links": [
            "2260bbfc.8132c4"
        ],
        "x": 501,
        "y": 266,
        "wires": []
    },
    {
        "id": "a391379c.d8af88",
        "type": "inject",
        "z": "4eb32f79.2f182",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 118,
        "y": 303,
        "wires": [
            [
                "a2d77770.f94bb8"
            ]
        ]
    },
    {
        "id": "a2d77770.f94bb8",
        "type": "wml",
        "z": "4eb32f79.2f182",
        "name": "List Model Metrics",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "listModelMetrics",
        "model": "d8308d26-e143-41f3-a44c-7808a890e7bb",
        "modelhidden": "",
        "deploymenthidden": "",
        "x": 315,
        "y": 303,
        "wires": [
            [
                "558086aa.380d08"
            ]
        ]
    },
    {
        "id": "558086aa.380d08",
        "type": "link out",
        "z": "4eb32f79.2f182",
        "name": "",
        "links": [
            "2260bbfc.8132c4"
        ],
        "x": 500,
        "y": 303,
        "wires": []
    },
    {
        "id": "f201d40a.babaf8",
        "type": "inject",
        "z": "4eb32f79.2f182",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 117,
        "y": 339,
        "wires": [
            [
                "fd7674b5.f17558"
            ]
        ]
    },
    {
        "id": "fd7674b5.f17558",
        "type": "wml",
        "z": "4eb32f79.2f182",
        "name": "List Model Iterations",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "listLearningIterations",
        "model": "d8308d26-e143-41f3-a44c-7808a890e7bb",
        "modelhidden": "",
        "deploymenthidden": "",
        "x": 323,
        "y": 339,
        "wires": [
            [
                "63ae0cda.4fa9b4"
            ]
        ]
    },
    {
        "id": "63ae0cda.4fa9b4",
        "type": "link out",
        "z": "4eb32f79.2f182",
        "name": "",
        "links": [
            "2260bbfc.8132c4"
        ],
        "x": 500,
        "y": 339,
        "wires": []
    },
    {
        "id": "cefbaea0.7837c",
        "type": "comment",
        "z": "4eb32f79.2f182",
        "name": "Model Deployment Methods",
        "info": "",
        "x": 152,
        "y": 384,
        "wires": []
    },
    {
        "id": "c5ccb43.0622748",
        "type": "wml",
        "z": "4eb32f79.2f182",
        "name": "List Model Deployments",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "listModelDeployments",
        "model": "6ec9cc73-12a8-459c-912a-df1e83176ecc",
        "deployment": "e8f790a9-5208-4dcf-9917-477b109b5552",
        "modelhidden": "6ec9cc73-12a8-459c-912a-df1e83176ecc",
        "deploymenthidden": "",
        "x": 336,
        "y": 427,
        "wires": [
            [
                "af04c9b3.8ed8d8"
            ]
        ]
    },
    {
        "id": "7ac6d771.48e0a8",
        "type": "inject",
        "z": "4eb32f79.2f182",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 117,
        "y": 427,
        "wires": [
            [
                "c5ccb43.0622748"
            ]
        ]
    },
    {
        "id": "af04c9b3.8ed8d8",
        "type": "link out",
        "z": "4eb32f79.2f182",
        "name": "",
        "links": [
            "2260bbfc.8132c4"
        ],
        "x": 504,
        "y": 427,
        "wires": []
    },
    {
        "id": "e2fc526e.99507",
        "type": "inject",
        "z": "4eb32f79.2f182",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 117,
        "y": 466,
        "wires": [
            [
                "8955f989.d13328"
            ]
        ]
    },
    {
        "id": "8955f989.d13328",
        "type": "wml",
        "z": "4eb32f79.2f182",
        "name": "Get Deployment Details",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "getDeploymentDetails",
        "model": "e4288993-9a96-4c4e-8ba4-0b65fc729870",
        "deployment": "fc60458e-3394-49cf-bca2-848d5ea54a6b",
        "modelhidden": "e4288993-9a96-4c4e-8ba4-0b65fc729870",
        "deploymenthidden": "",
        "x": 333,
        "y": 466,
        "wires": [
            [
                "b7b5c7b8.80fd88"
            ]
        ]
    },
    {
        "id": "b7b5c7b8.80fd88",
        "type": "link out",
        "z": "4eb32f79.2f182",
        "name": "",
        "links": [
            "2260bbfc.8132c4"
        ],
        "x": 503,
        "y": 466,
        "wires": []
    },
    {
        "id": "fc6c9f85.1d113",
        "type": "comment",
        "z": "4eb32f79.2f182",
        "name": "Scoring - Prediction",
        "info": "",
        "x": 124,
        "y": 513,
        "wires": []
    },
    {
        "id": "344872ff.edd5ae",
        "type": "function",
        "z": "4eb32f79.2f182",
        "name": "Build Payload Values",
        "func": "msg.payload = [[16.4, 48.3, 30, 75.4, 28.9, 20]];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 302,
        "y": 559,
        "wires": [
            [
                "9847c45f.741348"
            ]
        ]
    },
    {
        "id": "4c9af9a.d584408",
        "type": "comment",
        "z": "4eb32f79.2f182",
        "name": "Delete",
        "info": "",
        "x": 82.5,
        "y": 612,
        "wires": []
    },
    {
        "id": "491590f3.df961",
        "type": "inject",
        "z": "4eb32f79.2f182",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 116,
        "y": 654,
        "wires": [
            [
                "534ea3a2.61d09c"
            ]
        ]
    },
    {
        "id": "ca81fd0e.f1473",
        "type": "inject",
        "z": "4eb32f79.2f182",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 116,
        "y": 693,
        "wires": [
            [
                "993c3a02.4d1478"
            ]
        ]
    },
    {
        "id": "534ea3a2.61d09c",
        "type": "wml",
        "z": "4eb32f79.2f182",
        "name": "Delete Model",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "deleteModel",
        "model": "695210bd-5610-481c-b51b-0897cf7a94d6",
        "deployment": "",
        "modelhidden": "695210bd-5610-481c-b51b-0897cf7a94d6",
        "deploymenthidden": "",
        "x": 277.5,
        "y": 654,
        "wires": [
            [
                "250f73df.d60f4c"
            ]
        ]
    },
    {
        "id": "993c3a02.4d1478",
        "type": "wml",
        "z": "4eb32f79.2f182",
        "name": "Delete Model Deployment",
        "connection": "7c06e90.5e71a18",
        "wml-mode": "deleteDeployment",
        "model": "",
        "deployment": "",
        "modelhidden": "",
        "deploymenthidden": "",
        "x": 318.5,
        "y": 693,
        "wires": [
            [
                "28d2d7e.79e8328"
            ]
        ]
    },
    {
        "id": "250f73df.d60f4c",
        "type": "link out",
        "z": "4eb32f79.2f182",
        "name": "",
        "links": [
            "2260bbfc.8132c4"
        ],
        "x": 498.5,
        "y": 653,
        "wires": []
    },
    {
        "id": "28d2d7e.79e8328",
        "type": "link out",
        "z": "4eb32f79.2f182",
        "name": "",
        "links": [
            "2260bbfc.8132c4"
        ],
        "x": 501.5,
        "y": 693,
        "wires": []
    },
    {
        "id": "554ddc5c.7edc44",
        "type": "link out",
        "z": "bc791889.602d28",
        "name": "Jump SenseHAT",
        "links": [
            "e1c13371.ed9b5"
        ],
        "x": 795,
        "y": 300,
        "wires": []
    },
    {
        "id": "e1c13371.ed9b5",
        "type": "link in",
        "z": "bc791889.602d28",
        "name": "SenseHAT",
        "links": [
            "554ddc5c.7edc44",
            "8f75d204.3911",
            "bef6f5f8.797c78"
        ],
        "x": 75,
        "y": 660,
        "wires": [
            [
                "d25d63ab.5651d"
            ]
        ]
    },
    {
        "id": "8f75d204.3911",
        "type": "link out",
        "z": "bc791889.602d28",
        "name": "Jump SenseHAT",
        "links": [
            "e1c13371.ed9b5"
        ],
        "x": 955,
        "y": 360,
        "wires": []
    },
    {
        "id": "bef6f5f8.797c78",
        "type": "link out",
        "z": "bc791889.602d28",
        "name": "Jump SenseHAT",
        "links": [
            "e1c13371.ed9b5"
        ],
        "x": 1135,
        "y": 1140,
        "wires": []
    },
    {
        "id": "8e83c5d7.b9a558",
        "type": "comment",
        "z": "bc791889.602d28",
        "name": "Handle GUI",
        "info": "",
        "x": 110,
        "y": 520,
        "wires": []
    },
    {
        "id": "85345542.d01e88",
        "type": "link in",
        "z": "8605b5aa.204638",
        "name": "SenseHAT",
        "links": [
            "977458de.bfce68",
            "c801c64f.d8f0e8",
            "842f323d.2f3b9"
        ],
        "x": 75,
        "y": 560,
        "wires": [
            [
                "6504f80a.554ac8"
            ]
        ]
    },
    {
        "id": "977458de.bfce68",
        "type": "link out",
        "z": "8605b5aa.204638",
        "name": "Jump SenseHAT",
        "links": [
            "85345542.d01e88"
        ],
        "x": 795,
        "y": 260,
        "wires": []
    },
    {
        "id": "c801c64f.d8f0e8",
        "type": "link out",
        "z": "8605b5aa.204638",
        "name": "Jump SenseHAT",
        "links": [
            "85345542.d01e88"
        ],
        "x": 1195,
        "y": 1220,
        "wires": []
    },
    {
        "id": "842f323d.2f3b9",
        "type": "link out",
        "z": "8605b5aa.204638",
        "name": "Jump SenseHAT",
        "links": [
            "85345542.d01e88"
        ],
        "x": 955,
        "y": 320,
        "wires": []
    },
    {
        "id": "e0d6488a.ddd8d8",
        "type": "comment",
        "z": "8605b5aa.204638",
        "name": "Handle Display",
        "info": "",
        "x": 120,
        "y": 440,
        "wires": []
    },
    {
        "id": "ad8430b3.b4f71",
        "type": "debug",
        "z": "8605b5aa.204638",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1000,
        "y": 1100,
        "wires": []
    },
    {
        "id": "30df4988.9f3866",
        "type": "comment",
        "z": "94c7ddf1.be173",
        "name": "Take Photo - Demo Flow",
        "info": "",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "e41aff68.fac1d",
        "type": "camerapi-takephoto",
        "z": "94c7ddf1.be173",
        "filemode": "0",
        "filename": "",
        "filedefpath": "1",
        "filepath": "",
        "fileformat": "jpeg",
        "resolution": "2",
        "rotation": "180",
        "fliph": "0",
        "flipv": "0",
        "brightness": "50",
        "contrast": "0",
        "sharpness": "0",
        "quality": "80",
        "imageeffect": "none",
        "exposuremode": "auto",
        "iso": "0",
        "agcwait": "0.3",
        "led": "1",
        "awb": "cloudy",
        "name": "Take It",
        "x": 270,
        "y": 140,
        "wires": [
            [
                "ac32eaef.f13458",
                "ccc07dae.9ca05",
                "e925dc17.03f33"
            ]
        ]
    },
    {
        "id": "3fe6cbd7.0647f4",
        "type": "inject",
        "z": "94c7ddf1.be173",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 160,
        "wires": [
            [
                "e41aff68.fac1d"
            ]
        ]
    },
    {
        "id": "ac32eaef.f13458",
        "type": "debug",
        "z": "94c7ddf1.be173",
        "name": "TakePhoto",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 450,
        "y": 100,
        "wires": []
    },
    {
        "id": "3c15ef60.46f95",
        "type": "ui_template",
        "z": "94c7ddf1.be173",
        "group": "38e29571.c7905a",
        "name": "Show Pic",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div layout=\"row\" layout-align=\"space-between\">\n    <img src=\"data:image/jpg;base64,{{msg.payload}}\"\n        width='290' \n        height='220' \n        id='img'\n        alt=' Getting Image'\n    >\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 640,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "27e12f70.64e45",
        "type": "ui_button",
        "z": "94c7ddf1.be173",
        "name": "",
        "group": "38e29571.c7905a",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Take Picture",
        "color": "",
        "bgcolor": "",
        "icon": "fa-photo",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "e41aff68.fac1d"
            ]
        ]
    },
    {
        "id": "ccc07dae.9ca05",
        "type": "base64",
        "z": "94c7ddf1.be173",
        "name": "convert base64",
        "action": "",
        "property": "payload",
        "x": 460,
        "y": 140,
        "wires": [
            [
                "3c15ef60.46f95"
            ]
        ]
    },
    {
        "id": "9f4162e9.2149b",
        "type": "inject",
        "z": "94c7ddf1.be173",
        "name": "Default",
        "topic": "",
        "payload": "/home/pi/Pictures/",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 340,
        "wires": [
            [
                "e21f4763.5ac438"
            ]
        ]
    },
    {
        "id": "e21f4763.5ac438",
        "type": "ui_dropdown",
        "z": "94c7ddf1.be173",
        "name": "",
        "label": "Path",
        "place": "Select option",
        "group": "2101ca6b.bb6cb6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "/Pictures/",
                "value": "/home/pi/Pictures/",
                "type": "str"
            },
            {
                "label": "/",
                "value": "/home/pi/",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 250,
        "y": 340,
        "wires": [
            [
                "2fbc40a6.94fb3"
            ]
        ]
    },
    {
        "id": "2fbc40a6.94fb3",
        "type": "function",
        "z": "94c7ddf1.be173",
        "name": "Set LS",
        "func": "flow.set (\"lspath\", msg.payload);\nflow.set (\"lsobj\", \"\");\n\nmsg.payload = \" -m \" + msg.payload + \"*.jpg\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 340,
        "wires": [
            [
                "e0e3c45a.a066b8"
            ]
        ]
    },
    {
        "id": "e0e3c45a.a066b8",
        "type": "exec",
        "z": "94c7ddf1.be173",
        "command": "ls",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 340,
        "wires": [
            [
                "50ecbf40.15cbe"
            ],
            [],
            []
        ]
    },
    {
        "id": "50ecbf40.15cbe",
        "type": "function",
        "z": "94c7ddf1.be173",
        "name": "Parse",
        "func": "var i;\nvar str = msg.payload;\nvar path = flow.get(\"lspath\");\nvar list = msg.payload.replace(/\\n|\\r/g, \"\");\nlist = list.split(\",\");\n\nfor (i in list) {\n    list[i] = list[i].replace(path,\"\").trim();\n    console.log(str);\n}\n\nmsg.options = list;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 340,
        "wires": [
            [
                "b9955013.7b517"
            ]
        ]
    },
    {
        "id": "b9955013.7b517",
        "type": "ui_dropdown",
        "z": "94c7ddf1.be173",
        "name": "",
        "label": "Files",
        "place": "Select option",
        "group": "2101ca6b.bb6cb6",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 790,
        "y": 340,
        "wires": [
            [
                "7124f131.49b02"
            ]
        ]
    },
    {
        "id": "7124f131.49b02",
        "type": "function",
        "z": "94c7ddf1.be173",
        "name": "Filename",
        "func": "msg.filename = flow.get(\"lspath\") + msg.payload;\nflow.set(\"lsobj\", msg.filename);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 400,
        "wires": [
            [
                "7903db63.eb3824"
            ]
        ]
    },
    {
        "id": "7903db63.eb3824",
        "type": "file in",
        "z": "94c7ddf1.be173",
        "name": "Load Pic",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "x": 420,
        "y": 400,
        "wires": [
            [
                "1533363b.12fd8a",
                "6fe08465.85647c"
            ]
        ]
    },
    {
        "id": "1533363b.12fd8a",
        "type": "base64",
        "z": "94c7ddf1.be173",
        "name": " base64",
        "action": "",
        "property": "payload",
        "x": 580,
        "y": 400,
        "wires": [
            [
                "1038eaf9.002a85"
            ]
        ]
    },
    {
        "id": "1038eaf9.002a85",
        "type": "ui_template",
        "z": "94c7ddf1.be173",
        "group": "2101ca6b.bb6cb6",
        "name": "Show Pic",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<div layout=\"row\" layout-align=\"space-between\">\n    <img src=\"data:image/jpg;base64,{{msg.payload}}\"\n        width='290' \n        height='220' \n        id='img'\n        alt=' Getting Image'\n    >\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 740,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "1c617a33.b8e766",
        "type": "comment",
        "z": "94c7ddf1.be173",
        "name": "Load Photo from Disk",
        "info": "",
        "x": 120,
        "y": 280,
        "wires": []
    },
    {
        "id": "f200b570.d01918",
        "type": "camera",
        "z": "94c7ddf1.be173",
        "name": "",
        "x": 270,
        "y": 200,
        "wires": [
            [
                "ccc07dae.9ca05"
            ]
        ]
    },
    {
        "id": "542cc311.2a6e1c",
        "type": "visual-recognition-v3",
        "z": "94c7ddf1.be173",
        "name": "Visual Recognition",
        "vr-service-endpoint": "https://gateway.watsonplatform.net/visual-recognition/api",
        "image-feature": "detectFaces",
        "lang": "en",
        "x": 210,
        "y": 560,
        "wires": [
            [
                "f4aadc78.d191f",
                "b5abc22a.a56eb",
                "5b936a35.c91624",
                "825deed9.4805a",
                "e3497a75.2bdb38",
                "e85a2f12.b4bbe"
            ]
        ]
    },
    {
        "id": "f4aadc78.d191f",
        "type": "debug",
        "z": "94c7ddf1.be173",
        "name": "VisRec",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 440,
        "y": 520,
        "wires": []
    },
    {
        "id": "b5abc22a.a56eb",
        "type": "ui_text",
        "z": "94c7ddf1.be173",
        "group": "c6016b91.fa58d8",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Age Max:",
        "format": "{{msg.result.images[0].faces[0].age.max}}",
        "layout": "row-left",
        "x": 440,
        "y": 560,
        "wires": []
    },
    {
        "id": "5b936a35.c91624",
        "type": "ui_text",
        "z": "94c7ddf1.be173",
        "group": "c6016b91.fa58d8",
        "order": 4,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Age Min:",
        "format": "{{msg.result.images[0].faces[0].age.min}}",
        "layout": "row-left",
        "x": 440,
        "y": 600,
        "wires": []
    },
    {
        "id": "825deed9.4805a",
        "type": "ui_text",
        "z": "94c7ddf1.be173",
        "group": "c6016b91.fa58d8",
        "order": 6,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Gender",
        "format": "{{msg.result.images[0].faces[0].gender.gender}}",
        "layout": "row-spread",
        "x": 440,
        "y": 680,
        "wires": []
    },
    {
        "id": "e3497a75.2bdb38",
        "type": "ui_text",
        "z": "94c7ddf1.be173",
        "group": "c6016b91.fa58d8",
        "order": 7,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Gender Score",
        "format": "{{msg.result.images[0].faces[0].gender.score}}",
        "layout": "row-spread",
        "x": 460,
        "y": 720,
        "wires": []
    },
    {
        "id": "e85a2f12.b4bbe",
        "type": "ui_text",
        "z": "94c7ddf1.be173",
        "group": "c6016b91.fa58d8",
        "order": 5,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Age Score:",
        "format": "{{msg.result.images[0].faces[0].age.score}}",
        "layout": "row-left",
        "x": 450,
        "y": 640,
        "wires": []
    },
    {
        "id": "ee41674f.034918",
        "type": "comment",
        "z": "94c7ddf1.be173",
        "name": "Classify Foto",
        "info": "",
        "x": 90,
        "y": 480,
        "wires": []
    },
    {
        "id": "56ce907d.7fa5a",
        "type": "link in",
        "z": "94c7ddf1.be173",
        "name": "VisRec",
        "links": [
            "6fe08465.85647c",
            "e925dc17.03f33"
        ],
        "x": 55,
        "y": 560,
        "wires": [
            [
                "542cc311.2a6e1c"
            ]
        ]
    },
    {
        "id": "6fe08465.85647c",
        "type": "link out",
        "z": "94c7ddf1.be173",
        "name": "Jump VisRec",
        "links": [
            "56ce907d.7fa5a"
        ],
        "x": 535,
        "y": 440,
        "wires": []
    },
    {
        "id": "e925dc17.03f33",
        "type": "link out",
        "z": "94c7ddf1.be173",
        "name": "Jump VisRec",
        "links": [
            "56ce907d.7fa5a"
        ],
        "x": 395,
        "y": 180,
        "wires": []
    },
    {
        "id": "93a0d9fa.304698",
        "type": "comment",
        "z": "d1d598b6.2d3c88",
        "name": "Detect Handwriting - Demo Flow",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "ec90d55d.ded938",
        "type": "camerapi-takephoto",
        "z": "d1d598b6.2d3c88",
        "filemode": "0",
        "filename": "",
        "filedefpath": "1",
        "filepath": "",
        "fileformat": "jpeg",
        "resolution": "1",
        "rotation": "0",
        "fliph": "0",
        "flipv": "0",
        "brightness": "50",
        "contrast": "100",
        "sharpness": "100",
        "quality": "80",
        "imageeffect": "none",
        "exposuremode": "auto",
        "iso": "0",
        "agcwait": "0.3",
        "led": "1",
        "awb": "auto",
        "name": "Take It",
        "x": 390,
        "y": 260,
        "wires": [
            [
                "983004f5.c9a948",
                "493fe82.4a7c418"
            ]
        ]
    },
    {
        "id": "ab7d229a.11964",
        "type": "ui_template",
        "z": "d1d598b6.2d3c88",
        "group": "68f7bdf6.3e3894",
        "name": "Show Pic",
        "order": 0,
        "width": "0",
        "height": "0",
        "format": "<style>\n#photo {\n    position:absolute;\n    z-index:1;\n    width:320px; \n    height:240px;\n}\n\n#container{\n    display:inline-block;\n    width:320px; \n    height:240px;\n    margin: 0 auto; \n    position:relative; \n}\n\n#gameCanvas{\n    position:relative;\n    z-index:20;\n}\n</style>\n\n<div id=\"container\">\n    <img id=\"photo\", class=\"image\" src=\"\" alt=\"Caputred image\"/>\n    <canvas id=\"gameCanvas\" width='320' height='240'></canvas>\n</div>\n\n<script>\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    \n    var canvas=document.getElementById(\"gameCanvas\"),\n    ctx = canvas.getContext(\"2d\");\n    \n    if (msg) {\n        if(msg.photo) {\n            $(\"#photo\").attr(\"src\", \"data:image/png;base64, \" + msg.payload);\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        } else if(msg.bbox) {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            \n            l = msg.bbox[0];\n            t = msg.bbox[1];\n            r = msg.bbox[2];\n            b = msg.bbox[3];\n            ctx.beginPath();\n            ctx.lineWidth = \"1\";\n            ctx.strokeStyle = msg.color;\n            ctx.rect(l-2, t-2, r-l+4, b-t+4);\n            ctx.stroke();\n            \n        } else if(msg.clear) {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n        }\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 240,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c2932b33.8c10e8",
        "type": "ui_button",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "group": "fe5e6e92.e74cb",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Prieview",
        "color": "",
        "bgcolor": "",
        "icon": "fa-photo",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 100,
        "y": 220,
        "wires": [
            [
                "cd4e79bf.8c58d8"
            ]
        ]
    },
    {
        "id": "a20cc8f4.cc21a8",
        "type": "inject",
        "z": "d1d598b6.2d3c88",
        "name": "Default",
        "topic": "",
        "payload": "/home/pi/Pictures/",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 400,
        "wires": [
            [
                "578bfddf.085764"
            ]
        ]
    },
    {
        "id": "578bfddf.085764",
        "type": "ui_dropdown",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "label": "Path",
        "place": "Select option",
        "group": "91d76a9f.182008",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "/Pictures/",
                "value": "/home/pi/Pictures/",
                "type": "str"
            },
            {
                "label": "/",
                "value": "/home/pi/",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 270,
        "y": 440,
        "wires": [
            [
                "1ea9a9d7.3f22a6"
            ]
        ]
    },
    {
        "id": "1ea9a9d7.3f22a6",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "Set LS",
        "func": "flow.set (\"lspath\", msg.payload);\nflow.set (\"lsobj\", \"\");\n\nmsg.payload = \" -m \" + msg.payload + \"*.jpg\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 440,
        "wires": [
            [
                "8706b59c.c28348"
            ]
        ]
    },
    {
        "id": "8706b59c.c28348",
        "type": "exec",
        "z": "d1d598b6.2d3c88",
        "command": "ls",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "859bca38.e39938"
            ],
            [],
            []
        ]
    },
    {
        "id": "859bca38.e39938",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "Parse",
        "func": "var i;\nvar str = msg.payload;\nvar path = flow.get(\"lspath\");\nvar list = msg.payload.replace(/\\n|\\r/g, \"\");\nlist = list.split(\",\");\n\nfor (i in list) {\n    list[i] = list[i].replace(path,\"\").trim();\n    console.log(str);\n}\n\nmsg.options = list;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 440,
        "wires": [
            [
                "78a4eaf4.fa8384"
            ]
        ]
    },
    {
        "id": "78a4eaf4.fa8384",
        "type": "ui_dropdown",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "label": "Files",
        "place": "Select option",
        "group": "91d76a9f.182008",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 810,
        "y": 440,
        "wires": [
            [
                "9af91ecf.f187e"
            ]
        ]
    },
    {
        "id": "9af91ecf.f187e",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "Filename",
        "func": "msg.filename = flow.get(\"lspath\") + msg.payload;\nflow.set(\"lsobj\", msg.filename);\n\nmsg.action = \"loaded\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 500,
        "wires": [
            [
                "b9c77eb7.7c2f8"
            ]
        ]
    },
    {
        "id": "b9c77eb7.7c2f8",
        "type": "file in",
        "z": "d1d598b6.2d3c88",
        "name": "Load Pic",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "x": 460,
        "y": 500,
        "wires": [
            [
                "5025bf9b.db29"
            ]
        ]
    },
    {
        "id": "f8b3d200.e7736",
        "type": "comment",
        "z": "d1d598b6.2d3c88",
        "name": "Load Photo from Disk",
        "info": "",
        "x": 120,
        "y": 360,
        "wires": []
    },
    {
        "id": "b78b92ba.a319",
        "type": "comment",
        "z": "d1d598b6.2d3c88",
        "name": "Classify Foto",
        "info": "",
        "x": 90,
        "y": 960,
        "wires": []
    },
    {
        "id": "a98e9a09.b64398",
        "type": "link in",
        "z": "d1d598b6.2d3c88",
        "name": "VisRec",
        "links": [
            "a60cc970.6d9108",
            "1466ce38.b4ce72"
        ],
        "x": 55,
        "y": 1000,
        "wires": [
            [
                "6b454caa.888ff4"
            ]
        ]
    },
    {
        "id": "a60cc970.6d9108",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "Jump VisRec",
        "links": [
            "a98e9a09.b64398"
        ],
        "x": 935,
        "y": 540,
        "wires": []
    },
    {
        "id": "1466ce38.b4ce72",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "Jump VisRec",
        "links": [
            "a98e9a09.b64398"
        ],
        "x": 935,
        "y": 360,
        "wires": []
    },
    {
        "id": "36069bbb.192e04",
        "type": "link in",
        "z": "d1d598b6.2d3c88",
        "name": "DisplayFoto",
        "links": [
            "5dee86b.f071478",
            "2d3a931d.38010c",
            "e470b050.1abc3"
        ],
        "x": 55,
        "y": 620,
        "wires": [
            [
                "ab7d229a.11964"
            ]
        ]
    },
    {
        "id": "95366c53.f1949",
        "type": "comment",
        "z": "d1d598b6.2d3c88",
        "name": "Display Foto",
        "info": "",
        "x": 90,
        "y": 580,
        "wires": []
    },
    {
        "id": "5dee86b.f071478",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "links": [
            "36069bbb.192e04"
        ],
        "x": 1015,
        "y": 280,
        "wires": []
    },
    {
        "id": "2d3a931d.38010c",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "links": [
            "36069bbb.192e04"
        ],
        "x": 935,
        "y": 500,
        "wires": []
    },
    {
        "id": "a83b3cf4.425fd",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "Jump Store",
        "links": [
            "e3238d96.c3ed"
        ],
        "x": 935,
        "y": 320,
        "wires": []
    },
    {
        "id": "cf72e3f5.e688e",
        "type": "comment",
        "z": "d1d598b6.2d3c88",
        "name": "Store Foto",
        "info": "",
        "x": 80,
        "y": 760,
        "wires": []
    },
    {
        "id": "e3238d96.c3ed",
        "type": "link in",
        "z": "d1d598b6.2d3c88",
        "name": "Store",
        "links": [
            "a83b3cf4.425fd"
        ],
        "x": 55,
        "y": 840,
        "wires": [
            [
                "49bcea50.17f364"
            ]
        ]
    },
    {
        "id": "cd4e79bf.8c58d8",
        "type": "change",
        "z": "d1d598b6.2d3c88",
        "name": "action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "preview",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 220,
        "wires": [
            [
                "ec90d55d.ded938"
            ]
        ]
    },
    {
        "id": "16f8ffa4.92efc",
        "type": "ui_button",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "group": "fe5e6e92.e74cb",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Store",
        "color": "",
        "bgcolor": "",
        "icon": "fa-photo",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "e496d608.8f32a8"
            ]
        ]
    },
    {
        "id": "e496d608.8f32a8",
        "type": "change",
        "z": "d1d598b6.2d3c88",
        "name": "action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "store",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "ec90d55d.ded938"
            ]
        ]
    },
    {
        "id": "d92ffb1e.bcc978",
        "type": "ui_button",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "group": "fe5e6e92.e74cb",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Detect",
        "color": "",
        "bgcolor": "",
        "icon": "fa-photo",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "77508525.8fdf1c"
            ]
        ]
    },
    {
        "id": "77508525.8fdf1c",
        "type": "change",
        "z": "d1d598b6.2d3c88",
        "name": "action",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "detect",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "ec90d55d.ded938"
            ]
        ]
    },
    {
        "id": "a6f07204.26fe3",
        "type": "switch",
        "z": "d1d598b6.2d3c88",
        "name": "Action ?",
        "property": "action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "preview",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "store",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "detect",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 760,
        "y": 320,
        "wires": [
            [
                "24b53c6.ad3f4c4"
            ],
            [
                "a83b3cf4.425fd",
                "24b53c6.ad3f4c4"
            ],
            [
                "1466ce38.b4ce72",
                "24b53c6.ad3f4c4"
            ]
        ]
    },
    {
        "id": "20619e5a.02c482",
        "type": "ui_switch",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "label": "Local or Cloud",
        "group": "fe5e6e92.e74cb",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 300,
        "y": 80,
        "wires": [
            [
                "946e7b9a.322438"
            ]
        ]
    },
    {
        "id": "946e7b9a.322438",
        "type": "change",
        "z": "d1d598b6.2d3c88",
        "name": "localorcloud",
        "rules": [
            {
                "t": "set",
                "p": "localorcloud",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "cca9919e.99e0b",
        "type": "inject",
        "z": "d1d598b6.2d3c88",
        "name": "Init",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "20619e5a.02c482"
            ]
        ]
    },
    {
        "id": "cb992985.cdc9b8",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "Set name",
        "func": "\n// get the path from the path-selector\nlet dat = new Date();\n\nmsg.filename = flow.get(\"lspath\") + \"Image_\" + dat.toISOString() + \".jpg\"; \nmsg.payload = msg.image;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 800,
        "wires": [
            [
                "64344b08.50ec04",
                "4942ed36.b3ed74"
            ]
        ]
    },
    {
        "id": "64344b08.50ec04",
        "type": "file",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "false",
        "x": 490,
        "y": 800,
        "wires": [
            [
                "ac3779e0.b6d038"
            ]
        ]
    },
    {
        "id": "c63fad26.af3f4",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "Set IoT Data",
        "func": "// enhance payload with a timestamp & devicename\nvar dat = new Date();\nmsg.payload.image = msg.b64image;\nmsg.payload.timestamp = Math.floor(dat);\nmsg.payload.date = dat.toJSON();\nmsg.payload.device = \"tjbot-01\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 880,
        "wires": [
            [
                "f9db7350.6d25e",
                "2c95aa6d.c38cc6"
            ]
        ]
    },
    {
        "id": "f9db7350.6d25e",
        "type": "wiotp out",
        "z": "d1d598b6.2d3c88",
        "authType": "d",
        "qs": "false",
        "qsDeviceId": "",
        "deviceKey": "787dd67f.06a908",
        "deviceType": "",
        "deviceId": "",
        "event": "image",
        "format": "json",
        "qos": "",
        "name": "Sent2IoTF",
        "x": 530,
        "y": 900,
        "wires": []
    },
    {
        "id": "49bcea50.17f364",
        "type": "switch",
        "z": "d1d598b6.2d3c88",
        "name": "Send ?",
        "property": "localorcloud",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 840,
        "wires": [
            [
                "cb992985.cdc9b8"
            ],
            [
                "c63fad26.af3f4"
            ]
        ]
    },
    {
        "id": "4942ed36.b3ed74",
        "type": "debug",
        "z": "d1d598b6.2d3c88",
        "name": "File Image",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 510,
        "y": 760,
        "wires": []
    },
    {
        "id": "2c95aa6d.c38cc6",
        "type": "debug",
        "z": "d1d598b6.2d3c88",
        "name": "Image IoTF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 530,
        "y": 860,
        "wires": []
    },
    {
        "id": "21bd10b9.2bab4",
        "type": "ui_text",
        "z": "d1d598b6.2d3c88",
        "group": "68f7bdf6.3e3894",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Size",
        "format": "{{msg.size}}{{msg.unit}} {{msg.suffix}}",
        "layout": "row-spread",
        "x": 330,
        "y": 660,
        "wires": []
    },
    {
        "id": "e1b2e92f.6103d8",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "Set size",
        "func": "size = {\n    'size': Math.round(msg.payload.length / 1000),\n    'unit': 'kB',\n    'suffix' : \"\"\n}\n\nif (msg.action == \"store\") {\n    size.suffix = flow.get(\"localorcloud\") ? \"local\" : \"cloud\";\n} else if (msg.action == \"preview\") {\n    size.suffix = \"preview\";\n} else if (msg.action == \"loaded\") {\n    size.suffix = \"load and detect\";\n} else {\n    size.suffix = \"detect\";\n}\n\nmsg = size;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 660,
        "wires": [
            [
                "21bd10b9.2bab4"
            ]
        ]
    },
    {
        "id": "f452e049.2a178",
        "type": "debug",
        "z": "d1d598b6.2d3c88",
        "name": "Class Outcome",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 540,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d03d453c.c8cfd8",
        "type": "http request",
        "z": "d1d598b6.2d3c88",
        "name": "Get Token",
        "method": "GET",
        "ret": "obj",
        "url": "https://eu-de.ml.cloud.ibm.com/v3/identity/token",
        "tls": "",
        "x": 350,
        "y": 1000,
        "wires": [
            [
                "a1305b49.db2a68"
            ]
        ]
    },
    {
        "id": "d5b331e3.e359f",
        "type": "http request",
        "z": "d1d598b6.2d3c88",
        "name": "Get Classification",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 290,
        "y": 1120,
        "wires": [
            [
                "f452e049.2a178",
                "3d508094.6a502",
                "63490770.a987e8"
            ]
        ]
    },
    {
        "id": "a1305b49.db2a68",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "Classification Request",
        "func": "msg.headers = {\n    \"Accept\": \"application/json\",\n    \"Authorization\": 'Bearer ' + msg.payload.token,\n    \"Content-Type\": \"application/json;charset=UTF-8\"\n};\n\n// msg.url = \"https://eu-de.ml.cloud.ibm.com/v3/wml_instances/c6cffbe7-484d-4ddc-ba18-11212d5417d8/deployments/0bacdc42-4409-4170-bcff-1eb12bdf1341/online\"\nmsg.url = \"https://eu-de.ml.cloud.ibm.com/v3/wml_instances/ca8827ac-42b3-4b43-bfdc-7eafb3bf054b/deployments/270ba656-5d19-4ed8-98ad-db98c2530d6d/online\";\nmsg.payload = msg.scoring_payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 1060,
        "wires": [
            [
                "d5b331e3.e359f"
            ]
        ]
    },
    {
        "id": "3d508094.6a502",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "Result Summary",
        "func": "// there is a list of results for the one image\n// sent for classification\nresults = msg.payload[0];\n\nvar text = '';\nfor(i = 0; i < results.length; i++) {\n    if( text !== '') {\n        text += ',';\n    }\n    text += results[i].class;\n}\n\nmsg = {\n    'payload': text,\n    'color': 'blue',\n    'speed': 4\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 1160,
        "wires": [
            [
                "6c7e168c.a24778",
                "557954fe.63ce0c"
            ]
        ],
        "outputLabels": [
            "SENSEHAT"
        ]
    },
    {
        "id": "3fa829f1.cb9bb6",
        "type": "ui_text",
        "z": "d1d598b6.2d3c88",
        "group": "68f7bdf6.3e3894",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Classification",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 190,
        "y": 700,
        "wires": []
    },
    {
        "id": "6c7e168c.a24778",
        "type": "rpi-sensehat out",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "x": 770,
        "y": 1160,
        "wires": []
    },
    {
        "id": "63490770.a987e8",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "Animate Result",
        "func": "// there is a list of results for the one image\n// sent for classification\n\nfunction num_words(str) {\n  return str.trim().split(/\\s+/).length;\n}\n\n\nspeech = {'payload': 'I could read the following digits.'}\nvar results = msg.payload[0];\nvar delay = 1;\n\nfunction send_result(i) {\n    \n    if( i >= results.length) {\n        node.send([null, {clear: true}]);\n        return;\n    }\n    \n    var photo = {};\n\n    r = results[i];\n    \n    digit = r.class.toString();\n    \n    photo.bbox = r.bbox;\n    \n    if(r.certainty > 0.9) {\n        text = digit;\n        photo.color = '#006600';\n\n    } else if (r.certainty > 0.75) {\n        text =  \"probably \" + digit;\n        photo.color = 'orange';\n        \n    } else {\n        text = \"probably \" + digit + \" but I'm not confident\";\n        photo.color = 'red';\n\n    }\n    \n    if( i < results.length - 1 ) {\n        text = text + ',';\n    }\n\n    if( i == results.length - 1 ) {\n        text = ' and ' + text + '.';\n    }\n    \n    speech = {payload: text};\n    node.send([speech, photo]);\n    \n    if( i < results.length) {\n        setTimeout(send_result, 1400 + num_words(text)*400, i+1);\n    }\n\n}\n\n\nnode.send([speech,null]);\n\nsetTimeout(send_result, 3000, 0);\n\nreturn null;\n",
        "outputs": 2,
        "noerr": 0,
        "x": 280,
        "y": 1240,
        "wires": [
            [
                "749848e6.9ea658"
            ],
            [
                "e470b050.1abc3"
            ]
        ],
        "outputLabels": [
            "SPEECH",
            "PHOTO"
        ]
    },
    {
        "id": "749848e6.9ea658",
        "type": "watson-text-to-speech",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "lang": "en-GB",
        "langhidden": "en-GB",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "voice": "en-GB_KateVoice",
        "voicehidden": "en-US_MichaelVoice",
        "format": "audio/wav",
        "password": "",
        "apikey": "3LW7p8r-BVXn068KEZ1bG22bjQGHBH2dGbmGrgTkYeed",
        "payload-response": true,
        "default-endpoint": false,
        "service-endpoint": "https://stream-fra.watsonplatform.net/text-to-speech/api",
        "x": 500,
        "y": 1220,
        "wires": [
            [
                "4d6822b6.25657c"
            ]
        ]
    },
    {
        "id": "4d6822b6.25657c",
        "type": "speakerpi-output",
        "z": "d1d598b6.2d3c88",
        "choose": "filebased",
        "filename": "",
        "channels": "1",
        "bitdepth": "8",
        "samplerate": "22050",
        "name": "Speaker",
        "x": 680,
        "y": 1220,
        "wires": []
    },
    {
        "id": "e470b050.1abc3",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "links": [
            "36069bbb.192e04"
        ],
        "x": 435,
        "y": 1260,
        "wires": []
    },
    {
        "id": "557954fe.63ce0c",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "links": [
            "182f9e1e.04b8a2"
        ],
        "x": 715,
        "y": 1120,
        "wires": []
    },
    {
        "id": "182f9e1e.04b8a2",
        "type": "link in",
        "z": "d1d598b6.2d3c88",
        "name": "Classify",
        "links": [
            "557954fe.63ce0c",
            "a02246f0.d2def8",
            "7c11628e.1f28cc"
        ],
        "x": 55,
        "y": 700,
        "wires": [
            [
                "3fa829f1.cb9bb6"
            ]
        ]
    },
    {
        "id": "6b454caa.888ff4",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "crt payload",
        "func": "\nmsg.scoring_payload = {\n    'values' : [msg.payload]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 1000,
        "wires": [
            [
                "d03d453c.c8cfd8"
            ]
        ]
    },
    {
        "id": "ac3779e0.b6d038",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "set path",
        "func": "msg.payload = flow.get(\"lspath\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 800,
        "wires": [
            [
                "573ba7c3.2210e8"
            ]
        ]
    },
    {
        "id": "573ba7c3.2210e8",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "Jump Fileload",
        "links": [
            "537c62a9.6df49c"
        ],
        "x": 755,
        "y": 800,
        "wires": []
    },
    {
        "id": "537c62a9.6df49c",
        "type": "link in",
        "z": "d1d598b6.2d3c88",
        "name": "Fileload",
        "links": [
            "573ba7c3.2210e8"
        ],
        "x": 55,
        "y": 440,
        "wires": [
            [
                "578bfddf.085764"
            ]
        ]
    },
    {
        "id": "983004f5.c9a948",
        "type": "change",
        "z": "d1d598b6.2d3c88",
        "name": "sav img",
        "rules": [
            {
                "t": "set",
                "p": "image",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 260,
        "wires": [
            [
                "5a217186.09d7f"
            ]
        ]
    },
    {
        "id": "5a217186.09d7f",
        "type": "base64",
        "z": "d1d598b6.2d3c88",
        "name": "b64",
        "action": "",
        "property": "payload",
        "x": 410,
        "y": 320,
        "wires": [
            [
                "acf89239.23423"
            ]
        ]
    },
    {
        "id": "acf89239.23423",
        "type": "change",
        "z": "d1d598b6.2d3c88",
        "name": "sav b64image",
        "rules": [
            {
                "t": "set",
                "p": "b64image",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 320,
        "wires": [
            [
                "a6f07204.26fe3",
                "b1b4a23f.c6c96"
            ]
        ]
    },
    {
        "id": "5025bf9b.db29",
        "type": "change",
        "z": "d1d598b6.2d3c88",
        "name": "sav img",
        "rules": [
            {
                "t": "set",
                "p": "image",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 500,
        "wires": [
            [
                "cb8d7501.aa4a68"
            ]
        ]
    },
    {
        "id": "cb8d7501.aa4a68",
        "type": "base64",
        "z": "d1d598b6.2d3c88",
        "name": "b64",
        "action": "",
        "property": "payload",
        "x": 630,
        "y": 540,
        "wires": [
            [
                "7c7efc98.f9b114"
            ]
        ]
    },
    {
        "id": "7c7efc98.f9b114",
        "type": "change",
        "z": "d1d598b6.2d3c88",
        "name": "sav b64image",
        "rules": [
            {
                "t": "set",
                "p": "b64image",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "photo",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 540,
        "wires": [
            [
                "a60cc970.6d9108",
                "2d3a931d.38010c",
                "613aad69.2e5bd4"
            ]
        ]
    },
    {
        "id": "2ed90aa3.8af0c6",
        "type": "comment",
        "z": "d1d598b6.2d3c88",
        "name": "Commands & Take Photo",
        "info": "",
        "x": 130,
        "y": 180,
        "wires": []
    },
    {
        "id": "24b53c6.ad3f4c4",
        "type": "change",
        "z": "d1d598b6.2d3c88",
        "name": "sav photo",
        "rules": [
            {
                "t": "set",
                "p": "photo",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 280,
        "wires": [
            [
                "5dee86b.f071478"
            ]
        ]
    },
    {
        "id": "b1b4a23f.c6c96",
        "type": "function",
        "z": "d1d598b6.2d3c88",
        "name": "set clasify",
        "func": "msg.payload = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 380,
        "wires": [
            [
                "7c11628e.1f28cc"
            ]
        ]
    },
    {
        "id": "7c11628e.1f28cc",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "links": [
            "182f9e1e.04b8a2"
        ],
        "x": 875,
        "y": 380,
        "wires": []
    },
    {
        "id": "67ca88e9.80e6f8",
        "type": "link in",
        "z": "d1d598b6.2d3c88",
        "name": "Size",
        "links": [
            "613aad69.2e5bd4"
        ],
        "x": 55,
        "y": 660,
        "wires": [
            [
                "e1b2e92f.6103d8"
            ]
        ]
    },
    {
        "id": "493fe82.4a7c418",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "",
        "links": [],
        "x": 495,
        "y": 220,
        "wires": []
    },
    {
        "id": "613aad69.2e5bd4",
        "type": "link out",
        "z": "d1d598b6.2d3c88",
        "name": "Jump Size",
        "links": [
            "67ca88e9.80e6f8"
        ],
        "x": 935,
        "y": 580,
        "wires": []
    }
]